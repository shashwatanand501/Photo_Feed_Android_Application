{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shash\\\\photofeed\\\\app\\\\screens\\\\upload.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { f, auth, database, storage } from \"../../config/config\";\nimport { permissions, ImagePicker } from 'expo';\n\nvar upload = function (_React$Component) {\n  _inherits(upload, _React$Component);\n\n  var _super = _createSuper(upload);\n\n  function upload(props) {\n    var _this;\n\n    _classCallCheck(this, upload);\n\n    _this = _super.call(this, props);\n\n    _this._checkPermission = function _callee() {\n      var _await$Permissions$as, status, _await$Permissions$as2, statusRoll;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                CAMERA: status\n              });\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 7:\n              _await$Permissions$as2 = _context.sent;\n              statusRoll = _await$Permissions$as2.statusRoll;\n\n              _this.setState({\n                CAMERA: statusRoll\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.s4 = function () {\n      return Math.floor((1 + Math.random()) * 0x1000) / toString(16).substring(1);\n    };\n\n    _this.uniqueId = function () {\n      return _this.s4() + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4();\n    };\n\n    _this.findNewImage = function _callee2() {\n      var result;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this._checkPermission();\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaType: 'Images',\n                allowsEditing: true,\n                quality: 1\n              }));\n\n            case 3:\n              result = _context2.sent;\n              console.log(result);\n\n              if (!result.cancelled) {\n                console.log('upload image');\n\n                _this.setState({\n                  imageSelected: true,\n                  imageId: _this.uniqueId(),\n                  uri: result.uri\n                });\n              } else {\n                console.log('cancel');\n\n                _this.setState({\n                  imageSelected: false\n                });\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.uploadImage = function _callee3(uri) {\n      var that, userid, imageId, re, ext, response, blob, FilePath, ref, snapshot;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              that = _assertThisInitialized(_this);\n              userid = f.auth().currentUser.uid;\n              imageId = _this.state.imageId;\n              re = /(?:\\.([^.]+))?$/;\n              ext = re.exec(uri)[1];\n\n              _this.setState({\n                currentFileType: ext,\n                uploading: true\n              });\n\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(fetch(uri));\n\n            case 8:\n              response = _context3.sent;\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 11:\n              blob = _context3.sent;\n              FilePath = imageId + '.' + that.state.currentFileType;\n              ref = storage.ref('user/' + '/img').child(FilePath);\n              _context3.next = 16;\n              return _regeneratorRuntime.awrap(ref.put(blob));\n\n            case 16:\n              snapshot = _context3.sent.downloadURL('state_changed', function (snapshot) {\n                console.log('Progress', snapshot.bytesTransferred, snapshot.totalBytes);\n              });\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.componentDidMount = function () {\n      var that = _assertThisInitialized(_this);\n\n      f.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          that.setState({\n            loggedin: true\n          });\n        } else {\n          that.setState({\n            loggedin: false\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      loggedin: false,\n      imageId: _this.uniqueId(),\n      imageSelected: false,\n      uploading: false,\n      caption: ''\n    };\n    alert(_this.uniqueId());\n    return _this;\n  }\n\n  _createClass(upload, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, this.state.loggedin == true ? React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, \"//check if an image is selected\", this.state.imageSelected == true ? React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 30\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 70,\n          paddingTop: 30,\n          backgroundColor: 'white',\n          borderColor: 0.5,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 34\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }\n      }, \"Upload\")), React.createElement(View, {\n        style: {\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginTop: 5\n        },\n        Caption: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 37\n        }\n      }), React.createElement(TextInput, {\n        editable: true,\n        placeholder: 'Enter your caption',\n        maxLength: 150,\n        multiline: true,\n        numberOfLines: 4,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            caption: text\n          });\n        },\n        style: {\n          marginVertical: 10,\n          height: 100,\n          padding: 5,\n          borderColor: 'grey',\n          borderRadius: 3,\n          backgroundColor: 'white',\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }))) : React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 28,\n          paddingBottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }, \"Upload\"), React.createElement(TouchableOpacity, {\n        style: {\n          paddingVertical: 10,\n          paddingHorizontal: 20,\n          borderRadius: 5\n        },\n        onPress: function onPress() {\n          return _this2.findNewImage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }, \"select photo\")))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, \"UPLOAD\")));\n    }\n  }]);\n\n  return upload;\n}(React.Component);\n\nexport default upload;","map":{"version":3,"sources":["C:/Users/shash/photofeed/app/screens/upload.js"],"names":["React","f","auth","database","storage","permissions","ImagePicker","upload","props","_checkPermission","Permissions","askAsync","CAMERA","status","setState","CAMERA_ROLL","statusRoll","s4","Math","floor","random","toString","substring","uniqueId","findNewImage","launchImageLibraryAsync","mediaType","allowsEditing","quality","result","console","log","cancelled","imageSelected","imageId","uri","uploadImage","that","userid","currentUser","uid","state","re","ext","exec","currentFileType","uploading","fetch","response","blob","FilePath","ref","child","put","snapshot","downloadURL","bytesTransferred","totalBytes","componentDidMount","onAuthStateChanged","user","loggedin","caption","alert","flex","height","paddingTop","backgroundColor","borderColor","justifyContent","alignItems","padding","marginTop","text","marginVertical","borderRadius","color","fontSize","paddingBottom","paddingVertical","paddingHorizontal","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {TextInput,ActivityIndicator,TouchableOpacity,FlatList,StyleSheet,Text,View,Image} from 'react-native';\r\nimport {f,auth,database,storage} from '../../config/config';\r\nimport {permissions,ImagePicker} from 'expo';\r\n\r\nclass upload extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedin: false,\r\n            imageId:this.uniqueId(),\r\n            imageSelected: false,\r\n            uploading: false,\r\n            caption: ''\r\n        }\r\n        alert(this.uniqueId());\r\n    }\r\n\r\n    _checkPermission =async() => {\r\n        const { status} = await Permissions.askAsync(Permissions.CAMERA);\r\n        this.setState({CAMERA:status});\r\n\r\n        \r\n        const { statusRoll } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n        this.setState({CAMERA:statusRoll});\r\n    }\r\n\r\n    s4 = () => {\r\n        return Math.floor((1+ Math.random()) * 0x1000)\r\n        /toString(16)\r\n        .substring(1);\r\n    }\r\n\r\n    uniqueId = () => {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n        + this.s4() + '-'+ this.s4() + '-'+ this.s4() + '-'+ this.s4() \r\n    }\r\n\r\n    findNewImage = async () => {\r\n        this._checkPermission();\r\n\r\n        let result  = await ImagePicker.launchImageLibraryAsync({\r\n            mediaType: 'Images',\r\n            allowsEditing: true,\r\n            quality:1\r\n        });\r\n        console.log(result);\r\n\r\n        if(!result.cancelled){\r\n\r\n            console.log('upload image');\r\n            this.setState({\r\n                imageSelected: true,\r\n                imageId: this.uniqueId(),\r\n                uri: result.uri\r\n            })\r\n\r\n        }else{\r\n            console.log('cancel');\r\n            this.setState({\r\n                imageSelected:false\r\n            });\r\n        }\r\n    }\r\n    uploadImage = async (uri) => {\r\n        //\r\n        var that = this;\r\n        var userid = f.auth().currentUser.uid;\r\n        var imageId = this.state.imageId;\r\n     \r\n        var re = /(?:\\.([^.]+))?$/;\r\n        var ext = re.exec(uri)[1];\r\n        this.setState({\r\n          currentFileType: ext,\r\n          uploading: true\r\n        });\r\n        const response = await fetch(uri);\r\n        const blob = await response.blob();\r\n        var FilePath = imageId+'.'+that.state.currentFileType;\r\n\r\n        const ref = storage.ref('user/'+'/img').child(FilePath);\r\n\r\n        var snapshot = (await ref.put(blob)).downloadURL('state_changed',snapshot => {\r\n            console.log('Progress', snapshot.bytesTransferred,snapshot.totalBytes)\r\n        });\r\n        \r\n    }\r\n    componentDidMount = () => {\r\n        var that =this;\r\n        f.auth().onAuthStateChanged(function(user){\r\n            if(user){\r\n                //Logged in\r\n                that.setState({\r\n                    loggedin: true\r\n                })\r\n            }else{\r\n                //not Logged in\r\n                that.setState({\r\n                    loggedin: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() \r\n    {\r\n        return(\r\n            <View style={{flex:1}}>\r\n                { this.state.loggedin == true ? (\r\n                    //are logged in\r\n                    <View style={{flex:1}}>\r\n                        //check if an image is selected  \r\n                        {this.state.imageSelected == true ? (\r\n                             <View style={{flex:1}}>\r\n                                 <View style={{height:70,paddingTop:30,backgroundColor:'white',borderColor:0.5,justifyContent:'center',alignItems:'center'}}>\r\n                                    <Text>Upload</Text>\r\n                                </View>\r\n                                <View style={{padding:5}}>\r\n                                    <Text style={{marginTop:5}}Caption></Text>\r\n                                    <TextInput \r\n                                    editable={true}\r\n                                    placeholder={'Enter your caption'}\r\n                                    maxLength={150}\r\n                                    multiline={true}\r\n                                    numberOfLines={4}\r\n                                    onChangeText={(text)=> this.setState({caption:text})}\r\n                                    style={{marginVertical:10,height:100,padding:5,borderColor:'grey',borderRadius:3,backgroundColor:'white',color:'black'}} \r\n                                    />\r\n                                </View>\r\n                             </View>\r\n                 ) : (\r\n                    <View style = {{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n                        <Text style ={{fontSize:28,paddingBottom:15}}>Upload</Text>\r\n                        <TouchableOpacity \r\n                        style ={{paddingVertical:10,paddingHorizontal:20,borderRadius:5}}\r\n                        onPress={()=> this.findNewImage()}>\r\n                            <Text>select photo</Text>\r\n                        </TouchableOpacity>\r\n                        </View>\r\n\r\n                         )} \r\n                    </View>\r\n                ) : (\r\n                    //not logged in\r\n                    <View>\r\n                        <Text>UPLOAD</Text>\r\n                    </View>    \r\n                )}\r\n            </View>\r\n        )}\r\n    }\r\nexport default upload;"]},"metadata":{},"sourceType":"module"}