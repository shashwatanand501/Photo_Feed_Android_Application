{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\photofeed\\\\app\\\\screens\\\\comments.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { f, auth, database, storage } from \"../../config/config\";\nimport UserAuth from \"../components/auth\";\n\nvar comment = function (_React$Component) {\n  _inherits(comment, _React$Component);\n\n  var _super = _createSuper(comment);\n\n  function comment(props) {\n    var _this;\n\n    _classCallCheck(this, comment);\n\n    _this = _super.call(this, props);\n\n    _this.checkParams = function () {\n      var params = _this.props.navigation.state.params;\n\n      if (params) {\n        if (params.userId) {\n          _this.setState({\n            userId: params.photoId\n          });\n\n          _this.fetchComments(params.userId);\n        }\n      }\n    };\n\n    _this.addCommentToList = function (comments_list, data, comment) {\n      var that = _assertThisInitialized(_this);\n\n      var commentObj = data[comment];\n      database.ref('users').child(commentObj.author).child('username').once('value').then(function (snapshot) {\n        var exists = snapshot.val != null;\n        if (exists) data = snapshot.val();\n        comments_list.push({\n          id: comment,\n          comment: commentObj.comment,\n          posted: that.timeConverter(commentObj.posted),\n          author: data,\n          authorId: comment.author\n        });\n        that.setState({\n          refresh: false,\n          loading: false\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.fetchComments = function (photoId) {\n      var that = _assertThisInitialized(_this);\n\n      database.ref('comments').child(photoId).orderByChild('posted').once('value').then(function (snapshot) {\n        var exists = snapshot.val() !== null;\n\n        if (exists) {\n          data = snapshot.val();\n          var comments_list = that.state.comments_list;\n\n          for (var comment in data) {\n            that.addCommentToList(comments_list, data, comment);\n          }\n        } else {\n          TouchList.setState({\n            comments_list: []\n          });\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.s4 = function () {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    };\n\n    _this.uniqueId = function () {\n      return _this.s4() + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4();\n    };\n\n    _this.pluralCheck = function (s) {\n      if (s == 1) {\n        return ' ago';\n      } else {\n        return 's ago';\n      }\n    };\n\n    _this.timeConverter = function (timestamp) {\n      var a = new Date(timestamp * 1000);\n      var seconds = Math.floor((new Date() - a) / 1000);\n      var interval = Math.floor(seconds / 3153600);\n\n      if (interval > 1) {\n        return interval + 'year' + _this.pluralCheck(interval);\n      }\n\n      interval = Math.floor(seconds / 2592000);\n\n      if (ivterval > 1) {\n        return interval + 'Month' + _this.pluralCheck(interval);\n      }\n\n      interval = Math.floor(seconds / 86400);\n\n      if (ivterval > 1) {\n        return interval + 'Day' + _this.pluralCheck(interval);\n      }\n\n      interval = Math.floor(seconds / 3600);\n\n      if (ivterval > 1) {\n        return interval + 'Hour' + _this.pluralCheck(interval);\n      }\n\n      interval = Math.floor(seconds / 60);\n\n      if (ivterval > 1) {\n        return interval + 'minute' + _this.pluralCheck(interval);\n      }\n\n      return Math.floor(seconds) + 'second' + _this.pluralCheck(seconds);\n    };\n\n    _this.componentDidMount = function () {\n      var that = _assertThisInitialized(_this);\n\n      f.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          that.setState({\n            loggedin: true\n          });\n        } else {\n          that.setState({\n            loggedin: false\n          });\n        }\n      });\n\n      _this.checkParams();\n    };\n\n    _this.postComment = function () {\n      var comment = _this.state.comment;\n\n      if (comment != '') {\n        var imageId = _this.state.photoId;\n        var userId = f.auth().currentUser.uid;\n\n        var commentId = _this.uniqueId();\n\n        var dateTime = Date.now();\n        var timestamp = Math.floor(dateTime / 1000);\n\n        _this.setState({\n          comment: ''\n        });\n\n        var commentObj = {\n          posted: timestamp,\n          author: userId,\n          comment: comment\n        };\n        database.ref('/comments/' + '/' + commentId).set(commentObj);\n      } else {\n        alert('Please enter any comment');\n      }\n    };\n\n    _this.reloadComment = function () {\n      _this.setState({\n        comments_list: []\n      });\n\n      _this.fetchComments(_this.state.photoId);\n    };\n\n    _this.state = {\n      loggedin: false,\n      comments_list: []\n    };\n    return _this;\n  }\n\n  _createClass(comment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDiection: 'row',\n          height: 70,\n          paddingTop: 30,\n          backgroundColor: 'white',\n          borderColor: 0.5,\n          justifyContent: 'center',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          width: 100\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          fontWeight: 'bold',\n          paddingLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 33\n        }\n      }, \"Go Back\")), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      }, \"Comments\"), React.createElement(Text, {\n        style: {\n          width: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }\n      }, \"?\")), this.state.comments_list.length == 0 ? React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }\n      }, \"No comments\") : React.createElement(FlatList, {\n        refreshing: this.this.state.comments_list,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        style: {\n          flex: 1,\n          backgroundColor: '#eee'\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(View, {\n            key: index,\n            style: {\n              width: '100%',\n              overflow: 'hidden',\n              marginBottom: 5,\n              justifyContent: 'space-between',\n              borderBottomWidth: 1,\n              borderColor: 'grey'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }\n          }, React.createElement(View, {\n            style: {\n              padding: 5,\n              width: '100%',\n              flexDirection: 'row',\n              justifyContent: ''\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }\n          }, item.posted), React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.props.navigation.navigatte('user', {\n                userId: item.authorId\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 41\n            }\n          }, item.author))), React.createElement(View, {\n            style: {\n              padding: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }\n          }, item.comment)));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }\n      }), this.state.loggedin == true ? React.createElement(KeyboardAvoidingView, {\n        behavior: \"padding\",\n        enabled: true,\n        style: {\n          borderTopColor: 'grey',\n          borderWidth: 1,\n          padding: 10,\n          marginBottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }\n      }, \"Post comment\"), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        editable: true,\n        placeholder: 'enter your comment here...',\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            comment: text\n          });\n        },\n        value: this.state.comment,\n        style: {\n          marginVertical: 10,\n          height: 50,\n          padding: 5,\n          borderColor: 'white',\n          borderRadius: 3,\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.postComment();\n        },\n        style: {\n          paddingHorizontal: 10,\n          paddingVertical: 10,\n          backgroundColor: 'blue',\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 33\n        }\n      }, \"Post\")))) : React.createElement(UserAuth, {\n        message: \"Please login to comment\",\n        moveScreen: true,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return comment;\n}(React.Component);\n\nexport default comment;","map":{"version":3,"sources":["E:/photofeed/app/screens/comments.js"],"names":["React","f","auth","database","storage","UserAuth","comment","props","checkParams","params","navigation","state","userId","setState","photoId","fetchComments","addCommentToList","comments_list","data","that","commentObj","ref","child","author","once","then","snapshot","exists","val","push","id","posted","timeConverter","authorId","refresh","loading","catch","error","console","log","orderByChild","TouchList","s4","Math","floor","random","toString","substring","uniqueId","pluralCheck","s","timestamp","a","Date","seconds","interval","ivterval","componentDidMount","onAuthStateChanged","user","loggedin","postComment","imageId","currentUser","uid","commentId","dateTime","now","set","alert","reloadComment","flex","flexDiection","height","paddingTop","backgroundColor","borderColor","justifyContent","alignItems","width","goBack","fontSize","fontWeight","paddingLeft","length","this","item","index","overflow","marginBottom","borderBottomWidth","padding","flexDirection","navigatte","borderTopColor","borderWidth","text","marginVertical","borderRadius","color","paddingHorizontal","paddingVertical","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {TouchableOpacity,TextInput,KeyboardAvoidingView,FlatList,StyleSheet,Text,View,Image} from 'react-native';\r\nimport {f,auth,database,storage} from '../../config/config';\r\nimport UserAuth from '../components/auth';\r\n\r\n\r\nclass comment extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedin: false,\r\n            comments_list:[]\r\n        }\r\n        \r\n    }\r\n\r\n    checkParams = () => {\r\n        //\r\n        var params = this.props.navigation.state.params;\r\n        if(params){\r\n            if(params.userId){\r\n                this.setState({\r\n                    userId:params.photoId\r\n                });\r\n                this.fetchComments(params.userId);\r\n            }\r\n        }\r\n    }\r\n\r\n    addCommentToList = (comments_list,data,comment) => {\r\n        var that = this;\r\n        var commentObj=data[comment];\r\n        database.ref('users').child(commentObj.author).child('username').once('value').then(function(snapshot){\r\n            \r\n            const exists = (snapshot.val !=null);\r\n            if(exists) data =snapshot.val();\r\n\r\n                comments_list.push({\r\n                    id:comment,\r\n                    comment:commentObj.comment,\r\n                    posted:that .timeConverter(commentObj.posted),\r\n                    author:data,\r\n                    authorId:comment.author\r\n                });\r\n                that.setState({\r\n                    refresh:false,\r\n                    loading:false\r\n                });\r\n\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    fetchComments = (photoId) => {\r\n        var that= this;\r\n        database.ref('comments').child(photoId).orderByChild('posted').once('value').then(function(snapshot){\r\n            const exists = (snapshot.val()!== null);\r\n            if(exists){\r\n                data =snapshot.val();\r\n                var comments_list= that.state.comments_list;\r\n\r\n                for(var comment in data){\r\n                    that.addCommentToList(comments_list,data,comment);\r\n                }\r\n\r\n            }else{\r\n                TouchList.setState({\r\n                    comments_list:[]\r\n                })\r\n            }\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    s4 = () => {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n          .toString(16)\r\n          .substring(1);\r\n      };\r\n      uniqueId = () => {\r\n        return (\r\n          this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4()\r\n        );\r\n      };\r\n    pluralCheck = (s) => {\r\n        if(s==1){\r\n            return ' ago';\r\n        }else{\r\n            return 's ago';\r\n        }\r\n    }\r\n    timeConverter = (timestamp)=> {\r\n        var a = new Date(timestamp *1000);\r\n        var seconds  =Math.floor((new Date()-a)/1000);\r\n\r\n        var interval = Math.floor(seconds / 3153600);\r\n        if(interval>1){\r\n            return interval+ 'year'+this.pluralCheck(interval);\r\n        }\r\n        interval=Math.floor(seconds/ 2592000);\r\n        if(ivterval>1){\r\n            return interval+ 'Month'+this.pluralCheck(interval);\r\n        }\r\n        interval=Math.floor(seconds/ 86400);\r\n        if(ivterval>1){\r\n            return interval+ 'Day'+this.pluralCheck(interval);\r\n        }\r\n        interval=Math.floor(seconds/ 3600);\r\n        if(ivterval>1){\r\n            return interval+ 'Hour'+this.pluralCheck(interval);\r\n        }\r\n        interval=Math.floor(seconds/ 60);\r\n        if(ivterval>1){\r\n            return interval+ 'minute'+this.pluralCheck(interval);\r\n        }\r\n        return Math.floor(seconds)+ 'second'+this.pluralCheck(seconds);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        var that =this;\r\n        f.auth().onAuthStateChanged(function(user){\r\n            if(user){\r\n                //Logged in\r\n                that.setState({\r\n                    loggedin: true\r\n                })\r\n            }else{\r\n                //not Logged in\r\n                that.setState({\r\n                    loggedin: false\r\n                });\r\n            }\r\n        });\r\n        this.checkParams();\r\n    }\r\n\r\n    postComment=()=>{\r\n    \r\n        var comment = this.state.comment;\r\n        if(comment !=''){\r\n            var imageId=this.state.photoId;\r\n            var userId= f.auth().currentUser.uid;\r\n            var commentId = this.uniqueId();\r\n            var dateTime = Date.now();\r\n            var timestamp = Math.floor(dateTime/1000);\r\n\r\n            this.setState({\r\n                comment:''\r\n            });\r\n            var commentObj ={\r\n                posted:timestamp,\r\n                author:userId,\r\n                comment:comment\r\n            };\r\n\r\n            database.ref('/comments/'+'/'+commentId).set(commentObj);\r\n\r\n        }else{\r\n            alert('Please enter any comment');\r\n        }\r\n    }\r\n\r\n    reloadComment = () => {\r\n        this.setState({\r\n            comments_list: []\r\n        });\r\n        this.fetchComments(this.state.photoId);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View style={{flex:1}}>\r\n                <View style={{flexDiection:'row',height:70,paddingTop:30,backgroundColor:'white',borderColor:0.5,justifyContent:'center',justifyContent:'space-between',alignItems:'center'}}>\r\n                            <TouchableOpacity \r\n                            style ={{width:100}}\r\n                            onPress={()=> this.props.navigation.goBack()} >\r\n                                <Text style ={{fontSize:12,fontWeight:'bold',paddingLeft:10}} >Go Back</Text>\r\n                            </TouchableOpacity>\r\n                            <Text>Comments</Text>\r\n                            <Text style ={{width:100}}>?</Text>\r\n\r\n                        </View>\r\n                        {this.state.comments_list.length == 0 ? (\r\n                            //no comment is there\r\n                            <Text>No comments</Text>\r\n                        ):(\r\n                            //are comments\r\n                        <FlatList \r\n                        refreshing={this.this.state.comments_list}\r\n                        keyExtractor={(item,index)=> index.toString()}\r\n                        style={{flex:1,backgroundColor:'#eee'}}\r\n                        renderItem={({item,index})=>(\r\n                            <View key={index} style={{width:'100%',overflow:'hidden',marginBottom:5,justifyContent:'space-between',borderBottomWidth:1,borderColor:'grey'}}>\r\n                                <View style={{padding:5,width:'100%',flexDirection:'row',justifyContent:''}}>\r\n                                    <Text>{item.posted}</Text>\r\n                                    <TouchableOpacity \r\n                                    onPress={()=> this.props.navigation.navigatte('user',{userId:item.authorId})}\r\n                                    >\r\n                                        <Text>{item.author}</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                <View style={{padding:5}} >\r\n                                    <Text>{item.comment}</Text>\r\n                                </View>\r\n                            </View>\r\n                        )}\r\n                        />\r\n                        )}\r\n                { this.state.loggedin == true ? (\r\n                    //are logged in\r\n                    <KeyboardAvoidingView behavior='padding' enabled style={{borderTopColor:'grey',borderWidth:1,padding:10,marginBottom:15}} >\r\n                        <Text style={{fontWeight:'bold'}}>\r\n                            Post comment\r\n                        </Text>\r\n                        <View>\r\n                            <TextInput \r\n                            editable={true}\r\n                            placeholder={'enter your comment here...'}\r\n                            onChangeText={(text)=> this.setState({comment:text})}\r\n                            value={this.state.comment}\r\n                            style={{marginVertical:10,height:50,padding:5,borderColor:'white',borderRadius:3,color:'black'}}\r\n                            />\r\n                            <TouchableOpacity\r\n                            onPress={()=> this.postComment()}\r\n                            style={{paddingHorizontal:10,paddingVertical:10, backgroundColor:'blue',borderRadius:5}}>\r\n                                <Text style={{color:'white'}}>Post</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </KeyboardAvoidingView>\r\n                ) : (\r\n                    //not logged in\r\n                    <UserAuth message={\"Please login to comment\"} moveScreen={true} navigation={this.props.navigation}  />    \r\n                )}\r\n\r\n             \r\n            </View>\r\n\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default comment;\r\n"]},"metadata":{},"sourceType":"module"}