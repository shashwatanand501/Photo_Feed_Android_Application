{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Native project\\\\photofeed complete\\\\node_modules\\\\react-navigation-stack\\\\dist\\\\views\\\\Header\\\\HeaderBackButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableItem from \"../TouchableItem\";\nimport defaultBackImage from \"../assets/back-icon.png\";\n\nvar HeaderBackButton = function (_React$PureComponent) {\n  _inherits(HeaderBackButton, _React$PureComponent);\n\n  var _super = _createSuper(HeaderBackButton);\n\n  function HeaderBackButton() {\n    var _this;\n\n    _classCallCheck(this, HeaderBackButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n\n    _this._onTextLayout = function (e) {\n      if (_this.state.initialTextWidth) {\n        return;\n      }\n\n      _this.setState({\n        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HeaderBackButton, [{\n    key: \"_renderBackImage\",\n    value: function _renderBackImage() {\n      var _this$props = this.props,\n          backImage = _this$props.backImage,\n          title = _this$props.title,\n          tintColor = _this$props.tintColor;\n      var BackImage;\n      var props;\n\n      if (React.isValidElement(backImage)) {\n        return backImage;\n      } else if (backImage) {\n        BackImage = backImage;\n        props = {\n          tintColor: tintColor,\n          title: title\n        };\n      } else {\n        BackImage = Image;\n        props = {\n          style: [styles.icon, !!title && styles.iconWithTitle, !!tintColor && {\n            tintColor: tintColor\n          }],\n          source: defaultBackImage\n        };\n      }\n\n      return React.createElement(BackImage, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }\n      }));\n    }\n  }, {\n    key: \"_maybeRenderTitle\",\n    value: function _maybeRenderTitle() {\n      var _this$props2 = this.props,\n          layoutPreset = _this$props2.layoutPreset,\n          backTitleVisible = _this$props2.backTitleVisible,\n          width = _this$props2.width,\n          title = _this$props2.title,\n          titleStyle = _this$props2.titleStyle,\n          tintColor = _this$props2.tintColor,\n          truncatedTitle = _this$props2.truncatedTitle;\n      var renderTruncated = this.state.initialTextWidth && width ? this.state.initialTextWidth > width : false;\n      var backButtonTitle = renderTruncated ? truncatedTitle : title;\n      var titleDefaultsToDisabled = layoutPreset === 'left' || Platform.OS === 'android' || typeof backButtonTitle !== 'string';\n\n      if (titleDefaultsToDisabled && !backTitleVisible) {\n        return null;\n      }\n\n      return React.createElement(Text, {\n        accessible: false,\n        onLayout: this._onTextLayout,\n        style: [styles.title, !!tintColor && {\n          color: tintColor\n        }, titleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }\n      }, backButtonTitle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          onPress = _this$props3.onPress,\n          pressColorAndroid = _this$props3.pressColorAndroid,\n          title = _this$props3.title;\n      var button = React.createElement(TouchableItem, {\n        accessible: false,\n        accessibilityComponentType: \"button\",\n        accessibilityLabel: title,\n        accessibilityTraits: \"button\",\n        testID: \"header-back\",\n        delayPressIn: 0,\n        onPress: onPress,\n        pressColor: pressColorAndroid,\n        style: styles.container,\n        borderless: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 18\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, this._renderBackImage(), this._maybeRenderTitle()));\n\n      if (Platform.OS === 'android') {\n        return React.createElement(View, {\n          style: styles.androidButtonWrapper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 14\n          }\n        }, button);\n      } else {\n        return button;\n      }\n    }\n  }]);\n\n  return HeaderBackButton;\n}(React.PureComponent);\n\nHeaderBackButton.defaultProps = {\n  pressColorAndroid: 'rgba(0, 0, 0, .32)',\n  tintColor: Platform.select({\n    ios: '#037aff'\n  }),\n  truncatedTitle: 'Back'\n};\nvar styles = StyleSheet.create({\n  androidButtonWrapper: {\n    margin: 13,\n    backgroundColor: 'transparent'\n  },\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent'\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10\n  },\n  icon: Platform.OS === 'ios' ? {\n    height: 21,\n    width: 13,\n    marginLeft: 9,\n    marginRight: 22,\n    marginVertical: 12,\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  } : {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  iconWithTitle: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {}\n});\nexport default HeaderBackButton;","map":{"version":3,"sources":["D:/Native project/photofeed complete/node_modules/react-navigation-stack/dist/views/Header/HeaderBackButton.js"],"names":["React","TouchableItem","defaultBackImage","HeaderBackButton","state","_onTextLayout","e","initialTextWidth","setState","nativeEvent","layout","x","width","props","backImage","title","tintColor","BackImage","isValidElement","Image","style","styles","icon","iconWithTitle","source","layoutPreset","backTitleVisible","titleStyle","truncatedTitle","renderTruncated","backButtonTitle","titleDefaultsToDisabled","Platform","OS","color","onPress","pressColorAndroid","button","container","_renderBackImage","_maybeRenderTitle","androidButtonWrapper","PureComponent","defaultProps","select","ios","StyleSheet","create","margin","backgroundColor","alignItems","flexDirection","fontSize","paddingRight","height","marginLeft","marginRight","marginVertical","resizeMode","transform","scaleX","I18nManager","isRTL"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { I18nManager, Image, Text, View, Platform, StyleSheet } from 'react-native';\n\nimport TouchableItem from '../TouchableItem';\n\nimport defaultBackImage from '../assets/back-icon.png';\n\nclass HeaderBackButton extends React.PureComponent {\n  static defaultProps = {\n    pressColorAndroid: 'rgba(0, 0, 0, .32)',\n    tintColor: Platform.select({\n      ios: '#037aff'\n    }),\n    truncatedTitle: 'Back'\n  };\n\n  state = {};\n\n  _onTextLayout = e => {\n    if (this.state.initialTextWidth) {\n      return;\n    }\n    this.setState({\n      initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width\n    });\n  };\n\n  _renderBackImage() {\n    const { backImage, title, tintColor } = this.props;\n\n    let BackImage;\n    let props;\n\n    if (React.isValidElement(backImage)) {\n      return backImage;\n    } else if (backImage) {\n      BackImage = backImage;\n      props = {\n        tintColor,\n        title\n      };\n    } else {\n      BackImage = Image;\n      props = {\n        style: [styles.icon, !!title && styles.iconWithTitle, !!tintColor && { tintColor }],\n        source: defaultBackImage\n      };\n    }\n\n    return <BackImage {...props} />;\n  }\n\n  _maybeRenderTitle() {\n    const {\n      layoutPreset,\n      backTitleVisible,\n      width,\n      title,\n      titleStyle,\n      tintColor,\n      truncatedTitle\n    } = this.props;\n\n    const renderTruncated = this.state.initialTextWidth && width ? this.state.initialTextWidth > width : false;\n\n    const backButtonTitle = renderTruncated ? truncatedTitle : title;\n\n    // If the left preset is used and we aren't on Android, then we\n    // default to disabling the label\n    const titleDefaultsToDisabled = layoutPreset === 'left' || Platform.OS === 'android' || typeof backButtonTitle !== 'string';\n\n    // If the title is explicitly enabled then we respect that\n    if (titleDefaultsToDisabled && !backTitleVisible) {\n      return null;\n    }\n\n    return <Text accessible={false} onLayout={this._onTextLayout} style={[styles.title, !!tintColor && { color: tintColor }, titleStyle]} numberOfLines={1}>\n        {backButtonTitle}\n      </Text>;\n  }\n\n  render() {\n    const { onPress, pressColorAndroid, title } = this.props;\n\n    let button = <TouchableItem accessible={false} accessibilityComponentType=\"button\" accessibilityLabel={title} accessibilityTraits=\"button\" testID=\"header-back\" delayPressIn={0} onPress={onPress} pressColor={pressColorAndroid} style={styles.container} borderless>\n        <View style={styles.container}>\n          {this._renderBackImage()}\n          {this._maybeRenderTitle()}\n        </View>\n      </TouchableItem>;\n\n    if (Platform.OS === 'android') {\n      return <View style={styles.androidButtonWrapper}>{button}</View>;\n    } else {\n      return button;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  androidButtonWrapper: {\n    margin: 13,\n    backgroundColor: 'transparent'\n  },\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent'\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10\n  },\n  icon: Platform.OS === 'ios' ? {\n    height: 21,\n    width: 13,\n    marginLeft: 9,\n    marginRight: 22,\n    marginVertical: 12,\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }]\n  } : {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }]\n  },\n  iconWithTitle: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {}\n});\n\nexport default HeaderBackButton;"]},"metadata":{},"sourceType":"module"}