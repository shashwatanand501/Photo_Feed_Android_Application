{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shash\\\\photofeed\\\\app\\\\screens\\\\upload.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { f, auth, database, storage } from \"../../config/config\";\n\nvar upload = function (_React$Component) {\n  _inherits(upload, _React$Component);\n\n  var _super = _createSuper(upload);\n\n  function upload(props) {\n    var _this;\n\n    _classCallCheck(this, upload);\n\n    _this = _super.call(this, props);\n\n    _this.s4 = function () {\n      return Math.floor((1 + Math.random()) * 0x1000) / toString(16).substring(1);\n    };\n\n    _this.uniqueId = function () {\n      return _this.s4() + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4();\n    };\n\n    _this.findNewImage = function () {};\n\n    _this.componentDidMount = function () {\n      var that = _assertThisInitialized(_this);\n\n      f.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          that.setState({\n            loggedin: true\n          });\n        } else {\n          that.setState({\n            loggedin: false\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      loggedin: false,\n      imageId: _this.uniqueId()\n    };\n    SpeechRecognitionAlternative(_this.uniqueId());\n    return _this;\n  }\n\n  _createClass(upload, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, this.state.loggedin == true ? React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 28,\n          paddingBottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"Upload\"), React.createElement(TouchableOpacity, {\n        style: {\n          paddingVertical: 10,\n          paddingHorizontal: 20,\n          borderRadius: 5\n        },\n        onPress: function onPress() {\n          return _this2.findNewImage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, \"select photo\"))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, \"UPLOAD\")));\n    }\n  }]);\n\n  return upload;\n}(React.Component);\n\nexport default upload;","map":{"version":3,"sources":["C:/Users/shash/photofeed/app/screens/upload.js"],"names":["React","f","auth","database","storage","upload","props","s4","Math","floor","random","toString","substring","uniqueId","findNewImage","componentDidMount","that","onAuthStateChanged","user","setState","loggedin","state","imageId","SpeechRecognitionAlternative","flex","justifyContent","alignItems","fontSize","paddingBottom","paddingVertical","paddingHorizontal","borderRadius","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {TouchableOpacity,FlatList,StyleSheet,Text,View,Image} from 'react-native';\r\nimport {f,auth,database,storage} from '../../config/config';\r\n\r\n\r\nclass upload extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedin: false,\r\n            imageId:this.uniqueId()\r\n        }\r\n        SpeechRecognitionAlternative(this.uniqueId());\r\n    }\r\n\r\n    s4 = () => {\r\n        return Math.floor((1+ Math.random()) * 0x1000)\r\n        /toString(16)\r\n        .substring(1);\r\n    }\r\n\r\n    uniqueId = () => {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n        + this.s4() + '-'+ this.s4() + '-'+ this.s4() + '-'+ this.s4() \r\n    }\r\n\r\n    findNewImage = () => {\r\n        //\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        var that =this;\r\n        f.auth().onAuthStateChanged(function(user){\r\n            if(user){\r\n                //Logged in\r\n                that.setState({\r\n                    loggedin: true\r\n                })\r\n            }else{\r\n                //not Logged in\r\n                that.setState({\r\n                    loggedin: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View style={{flex:1}}>\r\n                { this.state.loggedin == true ? (\r\n                    //are logged in\r\n                    <View style = {{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n                        <Text style ={{fontSize:28,paddingBottom:15}}>Upload</Text>\r\n                        <TouchableOpacity \r\n                        style ={{paddingVertical:10,paddingHorizontal:20,borderRadius:5}}\r\n                        onPress={()=> this.findNewImage()}>\r\n                            <Text>select photo</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                ) : (\r\n                    //not logged in\r\n                    <View>\r\n                        <Text>UPLOAD</Text>\r\n                    </View>    \r\n                )}\r\n\r\n             \r\n            </View>\r\n\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default upload;"]},"metadata":{},"sourceType":"module"}