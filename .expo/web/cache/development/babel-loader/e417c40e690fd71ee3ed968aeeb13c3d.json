{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shash\\\\photofeed\\\\app\\\\screens\\\\upload.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { f, auth, database, storage } from \"../../config/config.js\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport UserAuth from \"../components/auth.js\";\n\nvar upload = function (_React$Component) {\n  _inherits(upload, _React$Component);\n\n  var _super = _createSuper(upload);\n\n  function upload(props) {\n    var _this;\n\n    _classCallCheck(this, upload);\n\n    _this = _super.call(this, props);\n\n    _this._checkPermissions = function _callee() {\n      var _await$Permissions$as, status, _await$Permissions$as2, statusRoll;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                camera: status\n              });\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 7:\n              _await$Permissions$as2 = _context.sent;\n              statusRoll = _await$Permissions$as2.statusRoll;\n\n              _this.setState({\n                cameraRoll: statusRoll\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.s4 = function () {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    };\n\n    _this.uniqueId = function () {\n      return _this.s4() + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4() + \"-\" + _this.s4();\n    };\n\n    _this.findNewImage = function _callee2() {\n      var result;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this._checkPermissions();\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: \"Images\",\n                allowsEditing: true,\n                quality: 1\n              }));\n\n            case 3:\n              result = _context2.sent;\n              console.log(result);\n\n              if (!result.cancelled) {\n                console.log(\"upload image\");\n\n                _this.setState({\n                  imageSelected: true,\n                  imageId: _this.uniqueId(),\n                  uri: result.uri\n                });\n              } else {\n                console.log(\"cancel\");\n\n                _this.setState({\n                  imageSelected: false\n                });\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.uploadPublish = function () {\n      if (_this.state.uploading == false) {\n        if (_this.state.caption != \"\") {\n          _this.uploadImage(_this.state.uri);\n        } else {\n          alert(\"Please enter a caption..\");\n        }\n      } else {\n        console.log(\"Ignore button tap as already uploading\");\n      }\n    };\n\n    _this.uploadImage = function _callee3(uri) {\n      var that, userid, imageId, re, ext, FilePath, oReq;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              that = _assertThisInitialized(_this);\n              userid = f.auth().currentUser.uid;\n              imageId = _this.state.imageId;\n              re = /(?:\\.([^.]+))?$/;\n              ext = re.exec(uri)[1];\n\n              _this.setState({\n                currentFileType: ext,\n                uploading: true\n              });\n\n              FilePath = imageId + \".\" + that.state.currentFileType;\n              oReq = new XMLHttpRequest();\n              oReq.open(\"GET\", uri, true);\n              oReq.responseType = \"blob\";\n\n              oReq.onload = function () {\n                var blob = oReq.response;\n\n                _this.completeUploadBlob(blob, FilePath);\n              };\n\n              oReq.send();\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.completeUploadBlob = function (blob, FilePath) {\n      var that = _assertThisInitialized(_this);\n\n      var userid = f.auth().currentUser.uid;\n      var imageId = _this.state.imageId;\n      var uploadTask = storage.ref(\"user/\" + userid + \"/img\").child(FilePath).put(blob);\n      uploadTask.on(\"state_changed\", function (snapshot) {\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes * 100).toFixed(0);\n        console.log(\"Upload is \" + progress + \"% complete\");\n        that.setState({\n          progress: progress\n        });\n      }, function (error) {\n        console.log(\"error with upload - \" + error);\n      }, function () {\n        that.setState({\n          progress: 100\n        });\n        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          console.log(downloadURL);\n          that.processUpload(downloadURL);\n        });\n      });\n    };\n\n    _this.processUpload = function (imageUrl) {\n      var imageId = _this.state.imageId;\n      var userId = f.auth().currentUser.uid;\n      var caption = _this.state.caption;\n      var dateTime = Date.now();\n      var timestamp = Math.floor(dateTime / 1000);\n      var photoObj = {\n        author: userId,\n        caption: caption,\n        posted: timestamp,\n        url: imageUrl\n      };\n      database.ref(\"/photos/\" + imageId).set(photoObj);\n      database.ref(\"/users/\" + userId + \"/photos/\" + imageId).set(photoObj);\n      alert(\"Image Uploaded!!\");\n\n      _this.setState({\n        uploading: false,\n        imageSelected: false,\n        caption: \"\",\n        uri: \"\"\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var that = _assertThisInitialized(_this);\n\n      f.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          that.setState({\n            loggedin: true\n          });\n        } else {\n          that.setState({\n            loggedin: false\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      loggedin: false,\n      imageId: _this.uniqueId(),\n      imageSelected: false,\n      uploading: false,\n      caption: '',\n      progress: 0\n    };\n    return _this;\n  }\n\n  _createClass(upload, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }\n      }, this.state.loggedin == true ? React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      }, this.state.imageSelected == true ? React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 70,\n          paddingTop: 30,\n          backgroundColor: 'white',\n          borderColor: 'lightgrey',\n          borderBottomWidth: 0.5,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }\n      }, \"Upload\")), React.createElement(View, {\n        style: {\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 19\n        }\n      }, \"Caption:\"), React.createElement(TextInput, {\n        editable: true,\n        placeholder: \"Enter your caption...\",\n        maxLength: 150,\n        multiline: true,\n        numberOfLine: 4,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            caption: text\n          });\n        },\n        style: {\n          marginVertical: 10,\n          height: 100,\n          padding: 5,\n          borderColor: 'grey',\n          borderWidth: 1,\n          borderRadius: 3,\n          backgroundColor: 'white',\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 19\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.uploadPublish();\n        },\n        style: {\n          alignSelf: 'center',\n          width: 170,\n          marginHorizontal: 'auto',\n          backgroundColor: 'purple',\n          borderRadius: 5,\n          paddingVertical: 10,\n          paddingHorizontal: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      }, \"Upload & Publish\")), this.state.uploading == true ? React.createElement(View, {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 23\n        }\n      }, this.state.progress, \"%\"), this.state.progress != 100 ? React.createElement(ActivityIndicator, {\n        size: \"small\",\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }\n      }) : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }\n      }, \"Processing\")) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }\n      }), React.createElement(Image, {\n        source: {\n          uri: this.state.uri\n        },\n        style: {\n          marginTop: 1,\n          resizeMode: 'cover',\n          width: '100%',\n          height: 275\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 19\n        }\n      }))) : React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 28,\n          paddingBottom: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, \"Upload\"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.findNewImage();\n        },\n        style: {\n          paddingVertical: 10,\n          paddingHorizontal: 20,\n          backgroundColor: 'blue',\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 19\n        }\n      }, \"Select Photo\")))) : React.createElement(UserAuth, {\n        message: \"Please login to upload a photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return upload;\n}(React.Component);\n\nexport default upload;","map":{"version":3,"sources":["C:/Users/shash/photofeed/app/screens/upload.js"],"names":["React","f","auth","database","storage","ImagePicker","Permissions","UserAuth","upload","props","_checkPermissions","askAsync","CAMERA","status","setState","camera","CAMERA_ROLL","statusRoll","cameraRoll","s4","Math","floor","random","toString","substring","uniqueId","findNewImage","launchImageLibraryAsync","mediaTypes","allowsEditing","quality","result","console","log","cancelled","imageSelected","imageId","uri","uploadPublish","state","uploading","caption","uploadImage","alert","that","userid","currentUser","uid","re","ext","exec","currentFileType","FilePath","oReq","XMLHttpRequest","open","responseType","onload","blob","response","completeUploadBlob","send","uploadTask","ref","child","put","on","snapshot","progress","bytesTransferred","totalBytes","toFixed","error","getDownloadURL","then","downloadURL","processUpload","imageUrl","userId","dateTime","Date","now","timestamp","photoObj","author","posted","url","set","componentDidMount","onAuthStateChanged","user","loggedin","flex","height","paddingTop","backgroundColor","borderColor","borderBottomWidth","justifyContent","alignItems","padding","marginTop","text","marginVertical","borderWidth","borderRadius","color","alignSelf","width","marginHorizontal","paddingVertical","paddingHorizontal","textAlign","resizeMode","fontSize","paddingBottom","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { TextInput, ActivityIndicator, TouchableOpacity, FlatList, StyleSheet, Text, View, Image } from \"react-native\";\r\nimport { f, auth, database, storage } from \"../../config/config.js\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Permissions from 'expo-permissions';\r\n\r\n\r\nimport UserAuth from \"../components/auth.js\";\r\n\r\nclass upload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedin: false,\r\n      imageId: this.uniqueId(),\r\n      imageSelected: false,\r\n      uploading: false,\r\n      caption: '',\r\n      progress: 0\r\n    };\r\n  }\r\n\r\n  _checkPermissions = async () => {\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n    this.setState({ camera: status });\r\n\r\n    const { statusRoll } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n    this.setState({ cameraRoll: statusRoll });\r\n  };\r\n\r\n  s4 = () => {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  };\r\n  uniqueId = () => {\r\n    return (\r\n      this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4()\r\n    );\r\n  };\r\n\r\n  findNewImage = async () => {\r\n    this._checkPermissions();\r\n\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: \"Images\",\r\n      allowsEditing: true,\r\n      quality: 1\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      console.log(\"upload image\");\r\n      this.setState({\r\n        imageSelected: true,\r\n        imageId: this.uniqueId(),\r\n        uri: result.uri\r\n      });\r\n      //this.uploadImage(result.uri);\r\n    } else {\r\n      console.log(\"cancel\");\r\n      this.setState({\r\n        imageSelected: false\r\n      });\r\n    }\r\n  };\r\n\r\n  uploadPublish = () => {\r\n    if (this.state.uploading == false) {\r\n      if (this.state.caption != \"\") {\r\n        //\r\n        this.uploadImage(this.state.uri);\r\n      } else {\r\n        alert(\"Please enter a caption..\");\r\n      }\r\n    } else {\r\n      console.log(\"Ignore button tap as already uploading\");\r\n    }\r\n  };\r\n\r\n  uploadImage = async uri => {\r\n    //\r\n    var that = this;\r\n    var userid = f.auth().currentUser.uid;\r\n    var imageId = this.state.imageId;\r\n\r\n    var re = /(?:\\.([^.]+))?$/;\r\n    var ext = re.exec(uri)[1];\r\n    this.setState({\r\n      currentFileType: ext,\r\n      uploading: true\r\n    });\r\n\r\n    /*const response = await fetch(uri);\r\n    const blob = await response.blob();*/\r\n    var FilePath = imageId + \".\" + that.state.currentFileType;\r\n\r\n    const oReq = new XMLHttpRequest();\r\n    oReq.open(\"GET\", uri, true);\r\n    oReq.responseType = \"blob\";\r\n    oReq.onload = () => {\r\n      const blob = oReq.response;\r\n      //Call function to complete upload with the new blob to handle the uploadTask.\r\n      this.completeUploadBlob(blob, FilePath);\r\n    };\r\n    oReq.send();\r\n\r\n    /*var uploadTask = storage.ref('user/'+userid+'/img').child(FilePath).put(blob);\r\n\r\n    uploadTask.on('state_changed', function(snapshot){\r\n      var progress = ((snapshot.bytesTransferred / snapshot.totalBytes) * 100).toFixed(0);\r\n      console.log('Upload is '+progress+'% complete');\r\n      that.setState({\r\n        progress:progress,\r\n      });\r\n    }, function(error) {\r\n      console.log('error with upload - '+error);\r\n    }, function(){\r\n      //complete\r\n      that.setState({progress:100});\r\n      uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL){\r\n        console.log(downloadURL);\r\n        that.processUpload(downloadURL);\r\n      });\r\n\r\n    });*/\r\n  };\r\n\r\n  completeUploadBlob = (blob, FilePath) => {\r\n    var that = this;\r\n    var userid = f.auth().currentUser.uid;\r\n    var imageId = this.state.imageId;\r\n\r\n    var uploadTask = storage\r\n      .ref(\"user/\" + userid + \"/img\")\r\n      .child(FilePath)\r\n      .put(blob);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      function(snapshot) {\r\n        var progress = (\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) *\r\n          100\r\n        ).toFixed(0);\r\n        console.log(\"Upload is \" + progress + \"% complete\");\r\n        that.setState({\r\n          progress: progress\r\n        });\r\n      },\r\n      function(error) {\r\n        console.log(\"error with upload - \" + error);\r\n      },\r\n      function() {\r\n        //complete\r\n        that.setState({ progress: 100 });\r\n        uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n          console.log(downloadURL);\r\n          that.processUpload(downloadURL);\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  processUpload = imageUrl => {\r\n    //Process here...\r\n\r\n    //Set needed info\r\n    var imageId = this.state.imageId;\r\n    var userId = f.auth().currentUser.uid;\r\n    var caption = this.state.caption;\r\n    var dateTime = Date.now();\r\n    var timestamp = Math.floor(dateTime / 1000);\r\n    //Build photo object\r\n    //author, caption, posted, url\r\n\r\n    var photoObj = {\r\n      author: userId,\r\n      caption: caption,\r\n      posted: timestamp,\r\n      url: imageUrl\r\n    };\r\n\r\n    //Update database\r\n\r\n    //Add to main feed\r\n    database.ref(\"/photos/\" + imageId).set(photoObj);\r\n\r\n    //Set user photos object\r\n    database.ref(\"/users/\" + userId + \"/photos/\" + imageId).set(photoObj);\r\n\r\n    alert(\"Image Uploaded!!\");\r\n\r\n    this.setState({\r\n      uploading: false,\r\n      imageSelected: false,\r\n      caption: \"\",\r\n      uri: \"\"\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    var that = this;\r\n    f.auth().onAuthStateChanged(function(user) {\r\n      if (user) {\r\n        //Logged in\r\n        that.setState({\r\n          loggedin: true\r\n        });\r\n      } else {\r\n        //Not logged in\r\n        that.setState({\r\n          loggedin: false\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={{flex:1}}>\r\n        {this.state.loggedin == true ? (\r\n          //are logged in\r\n          <View style={{flex:1}}>\r\n            \r\n            {this.state.imageSelected == true ? (\r\n              <View style={{flex:1}}>\r\n                <View\r\n                  style={{\r\n                    height:70,\r\n                    paddingTop:30,\r\n                    backgroundColor:'white',\r\n                    borderColor:'lightgrey',\r\n                    borderBottomWidth:0.5,\r\n                    justifyContent:'center',\r\n                    alignItems:'center'\r\n                  }}\r\n                >\r\n                  <Text>Upload</Text>\r\n                </View>\r\n                <View style={{padding:5}}>\r\n                  <Text style={{marginTop:5}}>Caption:</Text>\r\n                  <TextInput\r\n                    editable={true}\r\n                    placeholder={\"Enter your caption...\"}\r\n                    maxLength={150}\r\n                    multiline={true}\r\n                    numberOfLine={4}\r\n                    onChangeText={text => this.setState({ caption: text })}\r\n                    style={{\r\n                      marginVertical:10,\r\n                      height:100,\r\n                      padding:5,\r\n                      borderColor:'grey',\r\n                      borderWidth:1,\r\n                      borderRadius:3,\r\n                      backgroundColor:'white',\r\n                      color:'black'\r\n                    }}\r\n                  />\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => this.uploadPublish()}\r\n                    style={{\r\n                      alignSelf:'center',\r\n                      width:170,\r\n                      marginHorizontal:'auto',\r\n                      backgroundColor:'purple',\r\n                      borderRadius:5,\r\n                      paddingVertical:10,\r\n                      paddingHorizontal:20\r\n                    }}\r\n                  >\r\n                    <Text style={{textAlign:'center',color:'white'}}>\r\n                      Upload & Publish\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n\r\n                  {this.state.uploading == true ? (\r\n                    <View style={{marginTop:10}}>\r\n                      <Text>{this.state.progress}%</Text>\r\n                      {this.state.progress != 100 ? (\r\n                        <ActivityIndicator size=\"small\" color=\"blue\" />\r\n                      ) : (\r\n                        <Text>Processing</Text>\r\n                      )}\r\n                    </View>\r\n                  ) : (\r\n                    <View />\r\n                  )}\r\n\r\n                  <Image\r\n                    source={{uri:this.state.uri}}\r\n                    style={{\r\n                      marginTop:1,\r\n                      resizeMode:'cover',\r\n                      width:'100%',\r\n                      height:275\r\n                    }}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ) : (\r\n              <View\r\n                style={{\r\n                  flex:1,\r\n                  justifyContent:'center',\r\n                  alignItems:'center'\r\n                }}\r\n              >\r\n                <Text style={{fontSize:28,paddingBottom:15}}>Upload</Text>\r\n                <TouchableOpacity\r\n                  onPress={() => this.findNewImage()}\r\n                  style={{\r\n                    paddingVertical:10,\r\n                    paddingHorizontal:20,\r\n                    backgroundColor:'blue',\r\n                    borderRadius:5\r\n                  }}\r\n                >\r\n                  <Text style={{color:'white'}}>Select Photo</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          </View>\r\n        ) : (\r\n          //not logged in\r\n          <UserAuth message={\"Please login to upload a photo\"} />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default upload;\r\n"]},"metadata":{},"sourceType":"module"}