{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Native project\\\\photofeed complete\\\\node_modules\\\\react-navigation-stack\\\\dist\\\\views\\\\StackView\\\\screens.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nvar ScreenContainer = View;\n\nvar Screen = function (_React$Component) {\n  _inherits(Screen, _React$Component);\n\n  var _super = _createSuper(Screen);\n\n  function Screen() {\n    _classCallCheck(this, Screen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Screen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          onComponentRef = _this$props.onComponentRef,\n          props = _objectWithoutProperties(_this$props, [\"active\", \"onComponentRef\"]);\n\n      return React.createElement(Animated.View, _extends({}, props, {\n        ref: onComponentRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return Screen;\n}(React.Component);\n\nexport { ScreenContainer, Screen };","map":{"version":3,"sources":["D:/Native project/photofeed complete/node_modules/react-navigation-stack/dist/views/StackView/screens.js"],"names":["React","ScreenContainer","View","Screen","props","active","onComponentRef","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,IAAMC,eAAe,GAAGC,IAAxB;;IAEMC,M;;;;;;;;;;;;;6BACK;AAAA,wBAMsC,KAAKC,KAN3C;AAAA,UAMCC,MAND,eAMCA,MAND;AAAA,UAMSC,cANT,eAMSA,cANT;AAAA,UAM4BF,KAN5B;;AAQP,aAAO,oBAAC,QAAD,CAAU,IAAV,eAAmBA,KAAnB;AAA0B,QAAA,GAAG,EAAEE,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAVkBN,KAAK,CAACO,S;;AAa3B,SAASN,eAAT,EAA0BE,MAA1B","sourcesContent":["import React from 'react';\nimport { Animated, View } from 'react-native';\n\nconst ScreenContainer = View;\n\nclass Screen extends React.Component {\n  render() {\n    // Filter out active prop in this case because it is unused and\n    // can cause problems depending on react-native version:\n    // https://github.com/react-navigation/react-navigation/issues/4886\n\n    /* eslint-disable no-unused-vars */\n    const { active, onComponentRef, ...props } = this.props;\n\n    return <Animated.View {...props} ref={onComponentRef} />;\n  }\n}\n\nexport { ScreenContainer, Screen };"]},"metadata":{},"sourceType":"module"}