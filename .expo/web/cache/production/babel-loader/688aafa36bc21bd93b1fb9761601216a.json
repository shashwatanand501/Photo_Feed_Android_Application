{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Platform from\"react-native-web/dist/exports/Platform\";import{polyfill}from'react-lifecycles-compat';import{TabView,PagerPan}from'react-native-tab-view';import createTabNavigator from\"../utils/createTabNavigator\";import MaterialTopTabBar from\"../views/MaterialTopTabBar\";import ResourceSavingScene from\"../views/ResourceSavingScene\";var MaterialTabView=function(_React$PureComponent){_inherits(MaterialTabView,_React$PureComponent);var _super=_createSuper(MaterialTabView);function MaterialTabView(){var _this;_classCallCheck(this,MaterialTabView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={index:0,isSwiping:false,loaded:[_this.props.navigation.state.index],transitioningFromIndex:null};_this._renderIcon=function(_ref){var focused=_ref.focused,route=_ref.route,tintColor=_ref.tintColor;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;if(options.tabBarIcon){return typeof options.tabBarIcon==='function'?options.tabBarIcon({tintColor:tintColor,focused:focused}):options.tabBarIcon;}return null;};_this._renderTabBar=function(props){var state=_this.props.navigation.state;var route=state.routes[state.index];var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;var tabBarVisible=options.tabBarVisible==null?true:options.tabBarVisible;var _this$props=_this.props,_this$props$tabBarCom=_this$props.tabBarComponent,TabBarComponent=_this$props$tabBarCom===void 0?MaterialTopTabBar:_this$props$tabBarCom,tabBarPosition=_this$props.tabBarPosition,tabBarOptions=_this$props.tabBarOptions;if(TabBarComponent===null||!tabBarVisible){return null;}return React.createElement(TabBarComponent,_extends({},tabBarOptions,props,{tabBarPosition:tabBarPosition,screenProps:_this.props.screenProps,navigation:_this.props.navigation,getLabelText:_this.props.getLabelText,getAccessibilityLabel:_this.props.getAccessibilityLabel,getTestID:_this.props.getTestID,renderIcon:_this._renderIcon,onTabPress:_this.props.onTabPress}));};_this._renderPanPager=function(props){return React.createElement(PagerPan,props);};_this._handleAnimationEnd=function(){var lazy=_this.props.lazy;if(lazy){_this.setState({transitioningFromIndex:null,isSwiping:false});}};_this._handleSwipeStart=function(){var _this$props2=_this.props,navigation=_this$props2.navigation,lazy=_this$props2.lazy;if(lazy){_this.setState({isSwiping:true,loaded:_toConsumableArray(new Set([].concat(_toConsumableArray(_this.state.loaded),[Math.max(navigation.state.index-1,0),Math.min(navigation.state.index+1,navigation.state.routes.length-1)])))});}};_this._handleIndexChange=function(index){var _this$props3=_this.props,animationEnabled=_this$props3.animationEnabled,navigation=_this$props3.navigation,onIndexChange=_this$props3.onIndexChange,lazy=_this$props3.lazy;if(lazy&&animationEnabled){_this.setState({transitioningFromIndex:navigation.state.index||0});}onIndexChange(index);};_this._mustBeVisible=function(_ref2){var index=_ref2.index,focused=_ref2.focused;var _this$props4=_this.props,animationEnabled=_this$props4.animationEnabled,navigation=_this$props4.navigation;var _this$state=_this.state,isSwiping=_this$state.isSwiping,transitioningFromIndex=_this$state.transitioningFromIndex;if(isSwiping){var isSibling=navigation.state.index===index-1||navigation.state.index===index+1;if(isSibling){return true;}}if(animationEnabled&&transitioningFromIndex===index){return true;}return focused;};_this._renderScene=function(_ref3){var route=_ref3.route;var _this$props5=_this.props,renderScene=_this$props5.renderScene,descriptors=_this$props5.descriptors,lazy=_this$props5.lazy,optimizationsEnabled=_this$props5.optimizationsEnabled;if(lazy){var loaded=_this.state.loaded;var routes=_this.props.navigation.state.routes;var index=routes.findIndex(function(_ref4){var key=_ref4.key;return key===route.key;});var navigation=descriptors[route.key].navigation;var mustBeVisible=_this._mustBeVisible({index:index,focused:navigation.isFocused()});if(!loaded.includes(index)&&!mustBeVisible){return React.createElement(View,null);}if(optimizationsEnabled){return React.createElement(ResourceSavingScene,{isVisible:mustBeVisible},renderScene({route:route}));}}return renderScene({route:route});};return _this;}_createClass(MaterialTabView,[{key:\"render\",value:function render(){var _this$props6=this.props,navigation=_this$props6.navigation,animationEnabled=_this$props6.animationEnabled,renderScene=_this$props6.renderScene,onIndexChange=_this$props6.onIndexChange,rest=_objectWithoutProperties(_this$props6,[\"navigation\",\"animationEnabled\",\"renderScene\",\"onIndexChange\"]);var renderPager;var state=this.props.navigation.state;var route=state.routes[state.index];var descriptors=this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;var swipeEnabled=options.swipeEnabled==null?this.props.swipeEnabled:options.swipeEnabled;if(typeof swipeEnabled==='function'){swipeEnabled=swipeEnabled(state);}if(animationEnabled===false&&swipeEnabled===false){renderPager=this._renderPanPager;}return React.createElement(TabView,_extends({},rest,{navigationState:navigation.state,animationEnabled:animationEnabled,swipeEnabled:swipeEnabled,onAnimationEnd:this._handleAnimationEnd,onIndexChange:this._handleIndexChange,onSwipeStart:this._handleSwipeStart,renderPager:renderPager,renderTabBar:this._renderTabBar,renderScene:this._renderScene}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){var index=nextProps.navigation.state.index;if(prevState.index===index){return null;}return{loaded:prevState.loaded.includes(index)?prevState.loaded:[].concat(_toConsumableArray(prevState.loaded),[index]),index:index};}}]);return MaterialTabView;}(React.PureComponent);MaterialTabView.defaultProps={initialLayout:Platform.select({android:{width:1,height:0}}),animationEnabled:true,lazy:false,optimizationsEnabled:false};polyfill(MaterialTabView);export default createTabNavigator(MaterialTabView);","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-tabs/dist/navigators/createMaterialTopTabNavigator.js"],"names":["React","polyfill","TabView","PagerPan","createTabNavigator","MaterialTopTabBar","ResourceSavingScene","MaterialTabView","state","index","isSwiping","loaded","props","navigation","transitioningFromIndex","_renderIcon","focused","route","tintColor","descriptors","descriptor","key","options","tabBarIcon","_renderTabBar","routes","tabBarVisible","tabBarComponent","TabBarComponent","tabBarPosition","tabBarOptions","screenProps","getLabelText","getAccessibilityLabel","getTestID","onTabPress","_renderPanPager","_handleAnimationEnd","lazy","setState","_handleSwipeStart","Set","Math","max","min","length","_handleIndexChange","animationEnabled","onIndexChange","_mustBeVisible","isSibling","_renderScene","renderScene","optimizationsEnabled","findIndex","mustBeVisible","isFocused","includes","rest","renderPager","swipeEnabled","nextProps","prevState","PureComponent","defaultProps","initialLayout","Platform","select","android","width","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Platform } from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TabView, PagerPan } from 'react-native-tab-view';\nimport createTabNavigator from '../utils/createTabNavigator';\nimport MaterialTopTabBar from '../views/MaterialTopTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\n\nclass MaterialTabView extends React.PureComponent {\n  static defaultProps = {\n    // fix for https://github.com/react-native-community/react-native-tab-view/issues/312\n    initialLayout: Platform.select({\n      android: { width: 1, height: 0 }\n    }),\n    animationEnabled: true,\n    lazy: false,\n    optimizationsEnabled: false\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { index } = nextProps.navigation.state;\n\n    if (prevState.index === index) {\n      return null;\n    }\n\n    return {\n      loaded: prevState.loaded.includes(index) ? prevState.loaded : [...prevState.loaded, index],\n      index\n    };\n  }\n\n  state = {\n    index: 0,\n    isSwiping: false,\n    loaded: [this.props.navigation.state.index],\n    transitioningFromIndex: null\n  };\n\n  _renderIcon = ({ focused, route, tintColor }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarIcon) {\n      return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({ tintColor, focused }) : options.tabBarIcon;\n    }\n\n    return null;\n  };\n\n  _renderTabBar = props => {\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    const tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;\n\n    const {\n      tabBarComponent: TabBarComponent = MaterialTopTabBar,\n      tabBarPosition,\n      tabBarOptions\n    } = this.props;\n\n    if (TabBarComponent === null || !tabBarVisible) {\n      return null;\n    }\n\n    return (\n      /* $FlowFixMe */\n      <TabBarComponent {...tabBarOptions} {...props} tabBarPosition={tabBarPosition} screenProps={this.props.screenProps} navigation={this.props.navigation} getLabelText={this.props.getLabelText} getAccessibilityLabel={this.props.getAccessibilityLabel} getTestID={this.props.getTestID} renderIcon={this._renderIcon} onTabPress={this.props.onTabPress} />\n    );\n  };\n\n  _renderPanPager = props => <PagerPan {...props} />;\n\n  _handleAnimationEnd = () => {\n    const { lazy } = this.props;\n\n    if (lazy) {\n      this.setState({\n        transitioningFromIndex: null,\n        isSwiping: false\n      });\n    }\n  };\n\n  _handleSwipeStart = () => {\n    const { navigation, lazy } = this.props;\n\n    if (lazy) {\n      this.setState({\n        isSwiping: true,\n        loaded: [...new Set([...this.state.loaded, Math.max(navigation.state.index - 1, 0), Math.min(navigation.state.index + 1, navigation.state.routes.length - 1)])]\n      });\n    }\n  };\n\n  _handleIndexChange = index => {\n    const { animationEnabled, navigation, onIndexChange, lazy } = this.props;\n\n    if (lazy && animationEnabled) {\n      this.setState({\n        transitioningFromIndex: navigation.state.index || 0\n      });\n    }\n\n    onIndexChange(index);\n  };\n\n  _mustBeVisible = ({ index, focused }) => {\n    const { animationEnabled, navigation } = this.props;\n    const { isSwiping, transitioningFromIndex } = this.state;\n\n    if (isSwiping) {\n      const isSibling = navigation.state.index === index - 1 || navigation.state.index === index + 1;\n\n      if (isSibling) {\n        return true;\n      }\n    }\n\n    // The previous tab should remain visible while transitioning\n    if (animationEnabled && transitioningFromIndex === index) {\n      return true;\n    }\n\n    return focused;\n  };\n\n  _renderScene = ({ route }) => {\n    const { renderScene, descriptors, lazy, optimizationsEnabled } = this.props;\n\n    if (lazy) {\n      const { loaded } = this.state;\n      const { routes } = this.props.navigation.state;\n      const index = routes.findIndex(({ key }) => key === route.key);\n      const { navigation } = descriptors[route.key];\n\n      const mustBeVisible = this._mustBeVisible({\n        index,\n        focused: navigation.isFocused()\n      });\n\n      if (!loaded.includes(index) && !mustBeVisible) {\n        return <View />;\n      }\n\n      if (optimizationsEnabled) {\n        return <ResourceSavingScene isVisible={mustBeVisible}>\n            {renderScene({ route })}\n          </ResourceSavingScene>;\n      }\n    }\n\n    return renderScene({ route });\n  };\n\n  render() {\n    const {\n      navigation,\n      animationEnabled,\n      // eslint-disable-next-line no-unused-vars\n      renderScene,\n      // eslint-disable-next-line no-unused-vars\n      onIndexChange,\n      ...rest\n    } = this.props;\n\n    let renderPager;\n\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    let swipeEnabled = options.swipeEnabled == null ? this.props.swipeEnabled : options.swipeEnabled;\n\n    if (typeof swipeEnabled === 'function') {\n      swipeEnabled = swipeEnabled(state);\n    }\n\n    if (animationEnabled === false && swipeEnabled === false) {\n      renderPager = this._renderPanPager;\n    }\n\n    return <TabView {...rest} navigationState={navigation.state} animationEnabled={animationEnabled} swipeEnabled={swipeEnabled} onAnimationEnd={this._handleAnimationEnd} onIndexChange={this._handleIndexChange} onSwipeStart={this._handleSwipeStart} renderPager={renderPager} renderTabBar={this._renderTabBar} renderScene={\n    /* $FlowFixMe */\n    this._renderScene} />;\n  }\n}\n\npolyfill(MaterialTabView);\n\nexport default createTabNavigator(MaterialTabView);"]},"metadata":{},"sourceType":"module"}