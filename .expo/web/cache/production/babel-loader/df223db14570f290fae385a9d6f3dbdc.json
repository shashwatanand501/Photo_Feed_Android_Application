{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleInterpolator from\"./StackViewStyleInterpolator\";import{supportsImprovedSpringAnimation}from\"../../utils/ReactNativeFeatures\";var IOSTransitionSpec;if(supportsImprovedSpringAnimation()){IOSTransitionSpec={timing:Animated.spring,stiffness:1000,damping:500,mass:3};}else{IOSTransitionSpec={duration:500,easing:Easing.bezier(0.2833,0.99,0.31833,0.99),timing:Animated.timing};}var SlideFromRightIOS={transitionSpec:IOSTransitionSpec,screenInterpolator:StyleInterpolator.forHorizontal,containerStyle:{backgroundColor:'#000'}};var ModalSlideFromBottomIOS={transitionSpec:IOSTransitionSpec,screenInterpolator:StyleInterpolator.forVertical,containerStyle:{backgroundColor:'#000'}};var FadeInFromBottomAndroid={transitionSpec:{duration:350,easing:Easing.out(Easing.poly(5)),timing:Animated.timing},screenInterpolator:StyleInterpolator.forFadeFromBottomAndroid};var FadeOutToBottomAndroid={transitionSpec:{duration:230,easing:Easing.in(Easing.poly(4)),timing:Animated.timing},screenInterpolator:StyleInterpolator.forFadeFromBottomAndroid};function defaultTransitionConfig(transitionProps,prevTransitionProps,isModal){if(Platform.OS==='android'){if(prevTransitionProps&&transitionProps.index<prevTransitionProps.index){return FadeOutToBottomAndroid;}return FadeInFromBottomAndroid;}if(isModal){return ModalSlideFromBottomIOS;}return SlideFromRightIOS;}function getTransitionConfig(transitionConfigurer,transitionProps,prevTransitionProps,isModal){var defaultConfig=defaultTransitionConfig(transitionProps,prevTransitionProps,isModal);if(transitionConfigurer){return _objectSpread(_objectSpread({},defaultConfig),transitionConfigurer(transitionProps,prevTransitionProps,isModal));}return defaultConfig;}export default{defaultTransitionConfig:defaultTransitionConfig,getTransitionConfig:getTransitionConfig,SlideFromRightIOS:SlideFromRightIOS,ModalSlideFromBottomIOS:ModalSlideFromBottomIOS,FadeInFromBottomAndroid:FadeInFromBottomAndroid,FadeOutToBottomAndroid:FadeOutToBottomAndroid};","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-stack/dist/views/StackView/StackViewTransitionConfigs.js"],"names":["StyleInterpolator","supportsImprovedSpringAnimation","IOSTransitionSpec","timing","Animated","spring","stiffness","damping","mass","duration","easing","Easing","bezier","SlideFromRightIOS","transitionSpec","screenInterpolator","forHorizontal","containerStyle","backgroundColor","ModalSlideFromBottomIOS","forVertical","FadeInFromBottomAndroid","out","poly","forFadeFromBottomAndroid","FadeOutToBottomAndroid","in","defaultTransitionConfig","transitionProps","prevTransitionProps","isModal","Platform","OS","index","getTransitionConfig","transitionConfigurer","defaultConfig"],"mappings":"khCACA,MAAOA,CAAAA,iBAAP,oCACA,OAASC,+BAAT,uCAEA,GAAIC,CAAAA,iBAAJ,CACA,GAAID,+BAA+B,EAAnC,CAAuC,CAErCC,iBAAiB,CAAG,CAClBC,MAAM,CAAEC,QAAQ,CAACC,MADC,CAElBC,SAAS,CAAE,IAFO,CAGlBC,OAAO,CAAE,GAHS,CAIlBC,IAAI,CAAE,CAJY,CAApB,CAMD,CARD,IAQO,CAELN,iBAAiB,CAAG,CAClBO,QAAQ,CAAE,GADQ,CAElBC,MAAM,CAAEC,MAAM,CAACC,MAAP,CAAc,MAAd,CAAsB,IAAtB,CAA4B,OAA5B,CAAqC,IAArC,CAFU,CAGlBT,MAAM,CAAEC,QAAQ,CAACD,MAHC,CAApB,CAKD,CAGD,GAAMU,CAAAA,iBAAiB,CAAG,CACxBC,cAAc,CAAEZ,iBADQ,CAExBa,kBAAkB,CAAEf,iBAAiB,CAACgB,aAFd,CAGxBC,cAAc,CAAE,CACdC,eAAe,CAAE,MADH,CAHQ,CAA1B,CASA,GAAMC,CAAAA,uBAAuB,CAAG,CAC9BL,cAAc,CAAEZ,iBADc,CAE9Ba,kBAAkB,CAAEf,iBAAiB,CAACoB,WAFR,CAG9BH,cAAc,CAAE,CACdC,eAAe,CAAE,MADH,CAHc,CAAhC,CASA,GAAMG,CAAAA,uBAAuB,CAAG,CAE9BP,cAAc,CAAE,CACdL,QAAQ,CAAE,GADI,CAEdC,MAAM,CAAEC,MAAM,CAACW,GAAP,CAAWX,MAAM,CAACY,IAAP,CAAY,CAAZ,CAAX,CAFM,CAGdpB,MAAM,CAAEC,QAAQ,CAACD,MAHH,CAFc,CAO9BY,kBAAkB,CAAEf,iBAAiB,CAACwB,wBAPR,CAAhC,CAWA,GAAMC,CAAAA,sBAAsB,CAAG,CAE7BX,cAAc,CAAE,CACdL,QAAQ,CAAE,GADI,CAEdC,MAAM,CAAEC,MAAM,CAACe,EAAP,CAAUf,MAAM,CAACY,IAAP,CAAY,CAAZ,CAAV,CAFM,CAGdpB,MAAM,CAAEC,QAAQ,CAACD,MAHH,CAFa,CAO7BY,kBAAkB,CAAEf,iBAAiB,CAACwB,wBAPT,CAA/B,CAUA,QAASG,CAAAA,uBAAT,CAAiCC,eAAjC,CAAkDC,mBAAlD,CAAuEC,OAAvE,CAAgF,CAC9E,GAAIC,QAAQ,CAACC,EAAT,GAAgB,SAApB,CAA+B,CAG7B,GAAIH,mBAAmB,EAAID,eAAe,CAACK,KAAhB,CAAwBJ,mBAAmB,CAACI,KAAvE,CAA8E,CAE5E,MAAOR,CAAAA,sBAAP,CACD,CACD,MAAOJ,CAAAA,uBAAP,CACD,CAED,GAAIS,OAAJ,CAAa,CACX,MAAOX,CAAAA,uBAAP,CACD,CACD,MAAON,CAAAA,iBAAP,CACD,CAED,QAASqB,CAAAA,mBAAT,CAA6BC,oBAA7B,CAAmDP,eAAnD,CAAoEC,mBAApE,CAAyFC,OAAzF,CAAkG,CAChG,GAAMM,CAAAA,aAAa,CAAGT,uBAAuB,CAACC,eAAD,CAAkBC,mBAAlB,CAAuCC,OAAvC,CAA7C,CACA,GAAIK,oBAAJ,CAA0B,CACxB,sCACKC,aADL,EAEKD,oBAAoB,CAACP,eAAD,CAAkBC,mBAAlB,CAAuCC,OAAvC,CAFzB,EAID,CACD,MAAOM,CAAAA,aAAP,CACD,CAED,cAAe,CACbT,uBAAuB,CAAvBA,uBADa,CAEbO,mBAAmB,CAAnBA,mBAFa,CAGbrB,iBAAiB,CAAjBA,iBAHa,CAIbM,uBAAuB,CAAvBA,uBAJa,CAKbE,uBAAuB,CAAvBA,uBALa,CAMbI,sBAAsB,CAAtBA,sBANa,CAAf","sourcesContent":["import { Animated, Easing, Platform } from 'react-native';\nimport StyleInterpolator from './StackViewStyleInterpolator';\nimport { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';\n\nlet IOSTransitionSpec;\nif (supportsImprovedSpringAnimation()) {\n  // These are the exact values from UINavigationController's animation configuration\n  IOSTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3\n  };\n} else {\n  // This is an approximation of the IOS spring animation using a derived bezier curve\n  IOSTransitionSpec = {\n    duration: 500,\n    easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    timing: Animated.timing\n  };\n}\n\n// Standard iOS navigation transition\nconst SlideFromRightIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forHorizontal,\n  containerStyle: {\n    backgroundColor: '#000'\n  }\n};\n\n// Standard iOS navigation transition for modals\nconst ModalSlideFromBottomIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forVertical,\n  containerStyle: {\n    backgroundColor: '#000'\n  }\n};\n\n// Standard Android navigation transition when opening an Activity\nconst FadeInFromBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_open_enter.xml\n  transitionSpec: {\n    duration: 350,\n    easing: Easing.out(Easing.poly(5)), // decelerate\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid\n};\n\n// Standard Android navigation transition when closing an Activity\nconst FadeOutToBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_close_exit.xml\n  transitionSpec: {\n    duration: 230,\n    easing: Easing.in(Easing.poly(4)), // accelerate\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid\n};\n\nfunction defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {\n  if (Platform.OS === 'android') {\n    // Use the default Android animation no matter if the screen is a modal.\n    // Android doesn't have full-screen modals like iOS does, it has dialogs.\n    if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {\n      // Navigating back to the previous screen\n      return FadeOutToBottomAndroid;\n    }\n    return FadeInFromBottomAndroid;\n  }\n  // iOS and other platforms\n  if (isModal) {\n    return ModalSlideFromBottomIOS;\n  }\n  return SlideFromRightIOS;\n}\n\nfunction getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {\n  const defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);\n  if (transitionConfigurer) {\n    return {\n      ...defaultConfig,\n      ...transitionConfigurer(transitionProps, prevTransitionProps, isModal)\n    };\n  }\n  return defaultConfig;\n}\n\nexport default {\n  defaultTransitionConfig,\n  getTransitionConfig,\n  SlideFromRightIOS,\n  ModalSlideFromBottomIOS,\n  FadeInFromBottomAndroid,\n  FadeOutToBottomAndroid\n};"]},"metadata":{},"sourceType":"module"}