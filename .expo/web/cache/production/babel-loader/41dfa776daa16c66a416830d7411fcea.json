{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{createNavigationContainer,createNavigator,TabRouter}from'react-navigation';import TabView from\"./views/TabView\";import TabBarTop from\"./views/TabBarTop\";import TabBarBottom from\"./views/TabBarBottom\";var createTabNavigator=function createTabNavigator(routeConfigs){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var tabsConfig=_objectSpread(_objectSpread({},createTabNavigator.Presets.Default),config);var router=TabRouter(routeConfigs,tabsConfig);var navigator=createNavigator(TabView,router,tabsConfig);return createNavigationContainer(navigator);};var Presets={iOSBottomTabs:{tabBarComponent:TabBarBottom,tabBarPosition:'bottom',swipeEnabled:false,animationEnabled:false,initialLayout:undefined},AndroidTopTabs:{tabBarComponent:TabBarTop,tabBarPosition:'top',swipeEnabled:true,animationEnabled:true,initialLayout:undefined}};createTabNavigator.Presets={iOSBottomTabs:Presets.iOSBottomTabs,AndroidTopTabs:Presets.AndroidTopTabs,Default:Platform.OS==='ios'?Presets.iOSBottomTabs:Presets.AndroidTopTabs};export default createTabNavigator;","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-deprecated-tab-navigator/src/createTabNavigator.js"],"names":["React","createNavigationContainer","createNavigator","TabRouter","TabView","TabBarTop","TabBarBottom","createTabNavigator","routeConfigs","config","tabsConfig","Presets","Default","router","navigator","iOSBottomTabs","tabBarComponent","tabBarPosition","swipeEnabled","animationEnabled","initialLayout","undefined","AndroidTopTabs","Platform","OS"],"mappings":"+1BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,6DAEA,OACEC,yBADF,CAEEC,eAFF,CAGEC,SAHF,KAIO,kBAJP,CAMA,MAAOC,CAAAA,OAAP,uBACA,MAAOC,CAAAA,SAAP,yBACA,MAAOC,CAAAA,YAAP,4BAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,YAAD,CAA+B,IAAhBC,CAAAA,MAAgB,2DAAP,EAAO,CAExD,GAAMC,CAAAA,UAAU,gCAAQH,kBAAkB,CAACI,OAAnB,CAA2BC,OAAnC,EAA+CH,MAA/C,CAAhB,CAEA,GAAMI,CAAAA,MAAM,CAAGV,SAAS,CAACK,YAAD,CAAeE,UAAf,CAAxB,CAEA,GAAMI,CAAAA,SAAS,CAAGZ,eAAe,CAACE,OAAD,CAAUS,MAAV,CAAkBH,UAAlB,CAAjC,CAEA,MAAOT,CAAAA,yBAAyB,CAACa,SAAD,CAAhC,CACD,CATD,CAWA,GAAMH,CAAAA,OAAO,CAAG,CACdI,aAAa,CAAE,CACbC,eAAe,CAAEV,YADJ,CAEbW,cAAc,CAAE,QAFH,CAGbC,YAAY,CAAE,KAHD,CAIbC,gBAAgB,CAAE,KAJL,CAKbC,aAAa,CAAEC,SALF,CADD,CAQdC,cAAc,CAAE,CACdN,eAAe,CAAEX,SADH,CAEdY,cAAc,CAAE,KAFF,CAGdC,YAAY,CAAE,IAHA,CAIdC,gBAAgB,CAAE,IAJJ,CAKdC,aAAa,CAAEC,SALD,CARF,CAAhB,CAmCAd,kBAAkB,CAACI,OAAnB,CAA6B,CAC3BI,aAAa,CAAEJ,OAAO,CAACI,aADI,CAE3BO,cAAc,CAAEX,OAAO,CAACW,cAFG,CAG3BV,OAAO,CACLW,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CAAwBb,OAAO,CAACI,aAAhC,CAAgDJ,OAAO,CAACW,cAJ/B,CAA7B,CAOA,cAAef,CAAAA,kBAAf","sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\nimport {\n  createNavigationContainer,\n  createNavigator,\n  TabRouter,\n} from 'react-navigation';\n\nimport TabView from './views/TabView';\nimport TabBarTop from './views/TabBarTop';\nimport TabBarBottom from './views/TabBarBottom';\n\nconst createTabNavigator = (routeConfigs, config = {}) => {\n  // Use the look native to the platform by default\n  const tabsConfig = { ...createTabNavigator.Presets.Default, ...config };\n\n  const router = TabRouter(routeConfigs, tabsConfig);\n\n  const navigator = createNavigator(TabView, router, tabsConfig);\n\n  return createNavigationContainer(navigator);\n};\n\nconst Presets = {\n  iOSBottomTabs: {\n    tabBarComponent: TabBarBottom,\n    tabBarPosition: 'bottom',\n    swipeEnabled: false,\n    animationEnabled: false,\n    initialLayout: undefined,\n  },\n  AndroidTopTabs: {\n    tabBarComponent: TabBarTop,\n    tabBarPosition: 'top',\n    swipeEnabled: true,\n    animationEnabled: true,\n    initialLayout: undefined,\n  },\n};\n\n/**\n * Use these to get Android-style top tabs even on iOS or vice versa.\n *\n * Example:\n * ```\n * const HomeScreencreateTabNavigator = createTabNavigator({\n *  Chat: {\n *    screen: ChatScreen,\n *  },\n *  ...\n * }, {\n *  ...createTabNavigator.Presets.AndroidTopTabs,\n *  tabBarOptions: {\n *    ...\n *  },\n * });\n *```\n */\ncreateTabNavigator.Presets = {\n  iOSBottomTabs: Presets.iOSBottomTabs,\n  AndroidTopTabs: Presets.AndroidTopTabs,\n  Default:\n    Platform.OS === 'ios' ? Presets.iOSBottomTabs : Presets.AndroidTopTabs,\n};\n\nexport default createTabNavigator;\n"]},"metadata":{},"sourceType":"module"}