{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{createNavigator,createNavigationContainer,SafeAreaView}from'react-navigation';import DrawerRouter from\"../routers/DrawerRouter\";import DrawerView from\"../views/DrawerView\";import DrawerItems from\"../views/DrawerNavigatorItems\";var defaultContentComponent=function defaultContentComponent(props){return React.createElement(ScrollView,{alwaysBounceVertical:false},React.createElement(SafeAreaView,{forceInset:{top:'always',horizontal:'never'}},React.createElement(DrawerItems,props)));};var DefaultDrawerConfig={drawerWidth:function drawerWidth(){var _Dimensions$get=Dimensions.get('window'),height=_Dimensions$get.height,width=_Dimensions$get.width;var smallerAxisSize=Math.min(height,width);var isLandscape=width>height;var isTablet=smallerAxisSize>=600;var appBarHeight=Platform.OS==='ios'?isLandscape?32:44:56;var maxWidth=isTablet?320:280;return Math.min(smallerAxisSize-appBarHeight,maxWidth);},contentComponent:defaultContentComponent,drawerPosition:'left',drawerBackgroundColor:'white',useNativeAnimations:true};var DrawerNavigator=function DrawerNavigator(routeConfigs){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var mergedConfig=_objectSpread(_objectSpread({},DefaultDrawerConfig),config);var order=mergedConfig.order,paths=mergedConfig.paths,initialRouteName=mergedConfig.initialRouteName,initialRouteParams=mergedConfig.initialRouteParams,backBehavior=mergedConfig.backBehavior,getCustomActionCreators=mergedConfig.getCustomActionCreators,drawerConfig=_objectWithoutProperties(mergedConfig,[\"order\",\"paths\",\"initialRouteName\",\"initialRouteParams\",\"backBehavior\",\"getCustomActionCreators\"]);var routerConfig={order:order,paths:paths,initialRouteName:initialRouteName,initialRouteParams:initialRouteParams,backBehavior:backBehavior,getCustomActionCreators:getCustomActionCreators};var drawerRouter=DrawerRouter(routeConfigs,routerConfig);var navigator=createNavigator(DrawerView,drawerRouter,drawerConfig);return createNavigationContainer(navigator);};export default DrawerNavigator;","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-drawer/dist/navigators/createDrawerNavigator.js"],"names":["React","createNavigator","createNavigationContainer","SafeAreaView","DrawerRouter","DrawerView","DrawerItems","defaultContentComponent","props","top","horizontal","DefaultDrawerConfig","drawerWidth","Dimensions","get","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","Platform","OS","maxWidth","contentComponent","drawerPosition","drawerBackgroundColor","useNativeAnimations","DrawerNavigator","routeConfigs","config","mergedConfig","order","paths","initialRouteName","initialRouteParams","backBehavior","getCustomActionCreators","drawerConfig","routerConfig","drawerRouter","navigator"],"mappings":"o7BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,+LAEA,OAASC,eAAT,CAA0BC,yBAA1B,CAAqDC,YAArD,KAAyE,kBAAzE,CACA,MAAOC,CAAAA,YAAP,+BACA,MAAOC,CAAAA,UAAP,2BACA,MAAOC,CAAAA,WAAP,qCAMA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,KAAK,QAAI,qBAAC,UAAD,EAAY,oBAAoB,CAAE,KAAlC,EACrC,oBAAC,YAAD,EAAc,UAAU,CAAE,CAAEC,GAAG,CAAE,QAAP,CAAiBC,UAAU,CAAE,OAA7B,CAA1B,EACE,oBAAC,WAAD,CAAiBF,KAAjB,CADF,CADqC,CAAJ,EAArC,CAMA,GAAMG,CAAAA,mBAAmB,CAAG,CAC1BC,WAAW,CAAE,sBAAM,qBAMSC,UAAU,CAACC,GAAX,CAAe,QAAf,CANT,CAMTC,MANS,iBAMTA,MANS,CAMDC,KANC,iBAMDA,KANC,CAOjB,GAAMC,CAAAA,eAAe,CAAGC,IAAI,CAACC,GAAL,CAASJ,MAAT,CAAiBC,KAAjB,CAAxB,CACA,GAAMI,CAAAA,WAAW,CAAGJ,KAAK,CAAGD,MAA5B,CACA,GAAMM,CAAAA,QAAQ,CAAGJ,eAAe,EAAI,GAApC,CACA,GAAMK,CAAAA,YAAY,CAAGC,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CAAwBJ,WAAW,CAAG,EAAH,CAAQ,EAA3C,CAAgD,EAArE,CACA,GAAMK,CAAAA,QAAQ,CAAGJ,QAAQ,CAAG,GAAH,CAAS,GAAlC,CAEA,MAAOH,CAAAA,IAAI,CAACC,GAAL,CAASF,eAAe,CAAGK,YAA3B,CAAyCG,QAAzC,CAAP,CACD,CAfyB,CAgB1BC,gBAAgB,CAAEnB,uBAhBQ,CAiB1BoB,cAAc,CAAE,MAjBU,CAkB1BC,qBAAqB,CAAE,OAlBG,CAmB1BC,mBAAmB,CAAE,IAnBK,CAA5B,CAsBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,YAAD,CAA+B,IAAhBC,CAAAA,MAAgB,2DAAP,EAAO,CACrD,GAAMC,CAAAA,YAAY,gCAAQtB,mBAAR,EAAgCqB,MAAhC,CAAlB,CADqD,GAInDE,CAAAA,KAJmD,CAWjDD,YAXiD,CAInDC,KAJmD,CAKnDC,KALmD,CAWjDF,YAXiD,CAKnDE,KALmD,CAMnDC,gBANmD,CAWjDH,YAXiD,CAMnDG,gBANmD,CAOnDC,kBAPmD,CAWjDJ,YAXiD,CAOnDI,kBAPmD,CAQnDC,YARmD,CAWjDL,YAXiD,CAQnDK,YARmD,CASnDC,uBATmD,CAWjDN,YAXiD,CASnDM,uBATmD,CAUhDC,YAVgD,0BAWjDP,YAXiD,qGAarD,GAAMQ,CAAAA,YAAY,CAAG,CACnBP,KAAK,CAALA,KADmB,CAEnBC,KAAK,CAALA,KAFmB,CAGnBC,gBAAgB,CAAhBA,gBAHmB,CAInBC,kBAAkB,CAAlBA,kBAJmB,CAKnBC,YAAY,CAAZA,YALmB,CAMnBC,uBAAuB,CAAvBA,uBANmB,CAArB,CASA,GAAMG,CAAAA,YAAY,CAAGtC,YAAY,CAAC2B,YAAD,CAAeU,YAAf,CAAjC,CAEA,GAAME,CAAAA,SAAS,CAAG1C,eAAe,CAACI,UAAD,CAAaqC,YAAb,CAA2BF,YAA3B,CAAjC,CAEA,MAAOtC,CAAAA,yBAAyB,CAACyC,SAAD,CAAhC,CACD,CA3BD,CA6BA,cAAeb,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport { Dimensions, Platform, ScrollView } from 'react-native';\nimport { createNavigator, createNavigationContainer, SafeAreaView } from 'react-navigation';\nimport DrawerRouter from '../routers/DrawerRouter';\nimport DrawerView from '../views/DrawerView';\nimport DrawerItems from '../views/DrawerNavigatorItems';\n\n// A stack navigators props are the intersection between\n// the base navigator props (navgiation, screenProps, etc)\n// and the view's props\n\nconst defaultContentComponent = props => <ScrollView alwaysBounceVertical={false}>\n    <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n      <DrawerItems {...props} />\n    </SafeAreaView>\n  </ScrollView>;\n\nconst DefaultDrawerConfig = {\n  drawerWidth: () => {\n    /*\n     * Default drawer width is screen width - header height\n     * with a max width of 280 on mobile and 320 on tablet\n     * https://material.io/guidelines/patterns/navigation-drawer.html\n     */\n    const { height, width } = Dimensions.get('window');\n    const smallerAxisSize = Math.min(height, width);\n    const isLandscape = width > height;\n    const isTablet = smallerAxisSize >= 600;\n    const appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    const maxWidth = isTablet ? 320 : 280;\n\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: 'left',\n  drawerBackgroundColor: 'white',\n  useNativeAnimations: true\n};\n\nconst DrawerNavigator = (routeConfigs, config = {}) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n\n  const {\n    order,\n    paths,\n    initialRouteName,\n    initialRouteParams,\n    backBehavior,\n    getCustomActionCreators,\n    ...drawerConfig\n  } = mergedConfig;\n\n  const routerConfig = {\n    order,\n    paths,\n    initialRouteName,\n    initialRouteParams,\n    backBehavior,\n    getCustomActionCreators\n  };\n\n  const drawerRouter = DrawerRouter(routeConfigs, routerConfig);\n\n  const navigator = createNavigator(DrawerView, drawerRouter, drawerConfig);\n\n  return createNavigationContainer(navigator);\n};\n\nexport default DrawerNavigator;"]},"metadata":{},"sourceType":"module"}