{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{SwitchRouter,NavigationActions}from'react-navigation';import DrawerActions from\"./DrawerActions\";function withDefaultValue(obj,key,defaultValue){if(obj.hasOwnProperty(key)&&typeof obj[key]!=='undefined'){return obj;}obj[key]=defaultValue;return obj;}var getActiveRouteKey=function getActiveRouteKey(route){if(route.routes&&route.routes[route.index]){return getActiveRouteKey(route.routes[route.index]);}return route.key;};export default(function(routeConfigs){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};config=_objectSpread({},config);config=withDefaultValue(config,'resetOnBlur',false);config=withDefaultValue(config,'backBehavior','initialRoute');var switchRouter=SwitchRouter(routeConfigs,config);return _objectSpread(_objectSpread({},switchRouter),{},{getActionCreators:function getActionCreators(route,navStateKey){return _objectSpread({openDrawer:function openDrawer(){return DrawerActions.openDrawer({key:navStateKey});},closeDrawer:function closeDrawer(){return DrawerActions.closeDrawer({key:navStateKey});},toggleDrawer:function toggleDrawer(){return DrawerActions.toggleDrawer({key:navStateKey});}},switchRouter.getActionCreators(route,navStateKey));},getStateForAction:function getStateForAction(action,state){if(!state){return _objectSpread(_objectSpread({},switchRouter.getStateForAction(action,undefined)),{},{isDrawerOpen:false,openId:0,closeId:0,toggleId:0});}var isRouterTargeted=action.key==null||action.key===state.key;if(isRouterTargeted){if(action.type===DrawerActions.DRAWER_CLOSED){return _objectSpread(_objectSpread({},state),{},{isDrawerOpen:false});}if(action.type===DrawerActions.DRAWER_OPENED){return _objectSpread(_objectSpread({},state),{},{isDrawerOpen:true});}if(action.type===DrawerActions.CLOSE_DRAWER){return _objectSpread(_objectSpread({},state),{},{closeId:state.closeId+1});}if(action.type===NavigationActions.BACK&&state.isDrawerOpen){return _objectSpread(_objectSpread({},state),{},{closeId:state.closeId+1});}if(action.type===DrawerActions.OPEN_DRAWER){return _objectSpread(_objectSpread({},state),{},{openId:state.openId+1});}if(action.type===DrawerActions.TOGGLE_DRAWER){return _objectSpread(_objectSpread({},state),{},{toggleId:state.toggleId+1});}}var switchedState=switchRouter.getStateForAction(action,state);if(switchedState===null){return null;}if(switchedState!==state){if(getActiveRouteKey(switchedState)!==getActiveRouteKey(state)){return _objectSpread(_objectSpread({},switchedState),{},{closeId:state.closeId+1});}return switchedState;}return state;}});});","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-drawer/dist/routers/DrawerRouter.js"],"names":["SwitchRouter","NavigationActions","DrawerActions","withDefaultValue","obj","key","defaultValue","hasOwnProperty","getActiveRouteKey","route","routes","index","routeConfigs","config","switchRouter","getActionCreators","navStateKey","openDrawer","closeDrawer","toggleDrawer","getStateForAction","action","state","undefined","isDrawerOpen","openId","closeId","toggleId","isRouterTargeted","type","DRAWER_CLOSED","DRAWER_OPENED","CLOSE_DRAWER","BACK","OPEN_DRAWER","TOGGLE_DRAWER","switchedState"],"mappings":"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","sourcesContent":["import { SwitchRouter, NavigationActions } from 'react-navigation';\nimport DrawerActions from './DrawerActions';\n\nfunction withDefaultValue(obj, key, defaultValue) {\n  if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n    return obj;\n  }\n\n  obj[key] = defaultValue;\n  return obj;\n}\n\nconst getActiveRouteKey = route => {\n  if (route.routes && route.routes[route.index]) {\n    return getActiveRouteKey(route.routes[route.index]);\n  }\n  return route.key;\n};\n\nexport default ((routeConfigs, config = {}) => {\n  config = { ...config };\n  config = withDefaultValue(config, 'resetOnBlur', false);\n  config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n\n  const switchRouter = SwitchRouter(routeConfigs, config);\n\n  return {\n    ...switchRouter,\n\n    getActionCreators(route, navStateKey) {\n      return {\n        openDrawer: () => DrawerActions.openDrawer({ key: navStateKey }),\n        closeDrawer: () => DrawerActions.closeDrawer({ key: navStateKey }),\n        toggleDrawer: () => DrawerActions.toggleDrawer({ key: navStateKey }),\n        ...switchRouter.getActionCreators(route, navStateKey)\n      };\n    },\n\n    getStateForAction(action, state) {\n      // Set up the initial state if needed\n      if (!state) {\n        return {\n          ...switchRouter.getStateForAction(action, undefined),\n          isDrawerOpen: false,\n          openId: 0,\n          closeId: 0,\n          toggleId: 0\n        };\n      }\n\n      const isRouterTargeted = action.key == null || action.key === state.key;\n\n      if (isRouterTargeted) {\n        // Only handle actions that are meant for this drawer, as specified by action.key.\n\n        if (action.type === DrawerActions.DRAWER_CLOSED) {\n          return {\n            ...state,\n            isDrawerOpen: false\n          };\n        }\n\n        if (action.type === DrawerActions.DRAWER_OPENED) {\n          return {\n            ...state,\n            isDrawerOpen: true\n          };\n        }\n\n        if (action.type === DrawerActions.CLOSE_DRAWER) {\n          return {\n            ...state,\n            closeId: state.closeId + 1\n          };\n        }\n\n        if (action.type === NavigationActions.BACK && state.isDrawerOpen) {\n          return {\n            ...state,\n            closeId: state.closeId + 1\n          };\n        }\n\n        if (action.type === DrawerActions.OPEN_DRAWER) {\n          return {\n            ...state,\n            openId: state.openId + 1\n          };\n        }\n\n        if (action.type === DrawerActions.TOGGLE_DRAWER) {\n          return {\n            ...state,\n            toggleId: state.toggleId + 1\n          };\n        }\n      }\n\n      // Fall back on switch router for screen switching logic, and handling of child routers\n      const switchedState = switchRouter.getStateForAction(action, state);\n\n      if (switchedState === null) {\n        // The switch router or a child router is attempting to swallow this action. We return null to allow this.\n        return null;\n      }\n\n      // Has the switch router changed the state?\n      if (switchedState !== state) {\n        if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state)) {\n          // If any navigation has happened, make sure to close the drawer\n          return {\n            ...switchedState,\n            closeId: state.closeId + 1\n          };\n        }\n\n        // At this point, return the state as defined by the switch router.\n        // The active route key hasn't changed, so this most likely means that a child router has returned\n        // a new state like a param change, but the same key is still active and the drawer will remain open\n        return switchedState;\n      }\n\n      return state;\n    }\n  };\n});"]},"metadata":{},"sourceType":"module"}