{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{NavigationActions,StackActions}from'react-navigation';import invariant from\"../utils/invariant\";var DrawerSidebar=function(_React$PureComponent){_inherits(DrawerSidebar,_React$PureComponent);var _super=_createSuper(DrawerSidebar);function DrawerSidebar(){var _this;_classCallCheck(this,DrawerSidebar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this._getScreenOptions=function(routeKey){var descriptor=_this.props.descriptors[routeKey];invariant(descriptor.options,'Cannot access screen descriptor options from drawer sidebar');return descriptor.options;};_this._getLabel=function(_ref){var focused=_ref.focused,tintColor=_ref.tintColor,route=_ref.route;var _this$_getScreenOptio=_this._getScreenOptions(route.key),drawerLabel=_this$_getScreenOptio.drawerLabel,title=_this$_getScreenOptio.title;if(drawerLabel){return typeof drawerLabel==='function'?drawerLabel({tintColor:tintColor,focused:focused}):drawerLabel;}if(typeof title==='string'){return title;}return route.routeName;};_this._renderIcon=function(_ref2){var focused=_ref2.focused,tintColor=_ref2.tintColor,route=_ref2.route;var _this$_getScreenOptio2=_this._getScreenOptions(route.key),drawerIcon=_this$_getScreenOptio2.drawerIcon;if(drawerIcon){return typeof drawerIcon==='function'?drawerIcon({tintColor:tintColor,focused:focused}):drawerIcon;}return null;};_this._onItemPress=function(_ref3){var route=_ref3.route,focused=_ref3.focused;if(!focused){var subAction;if(route.index!=null&&route.index!==0){subAction=StackActions.reset({index:0,actions:[NavigationActions.navigate({routeName:route.routes[0].routeName})]});}_this.props.navigation.dispatch(NavigationActions.navigate({routeName:route.routeName,action:subAction}));}};return _this;}_createClass(DrawerSidebar,[{key:\"render\",value:function render(){var ContentComponent=this.props.contentComponent;if(!ContentComponent){return null;}var state=this.props.navigation.state;invariant(typeof state.index==='number','should be set');return React.createElement(View,{style:[styles.container,this.props.style]},React.createElement(ContentComponent,_extends({},this.props.contentOptions,{navigation:this.props.navigation,descriptors:this.props.descriptors,items:state.routes,activeItemKey:state.routes[state.index]?state.routes[state.index].key:null,screenProps:this.props.screenProps,getLabel:this._getLabel,renderIcon:this._renderIcon,onItemPress:this._onItemPress,drawerPosition:this.props.drawerPosition})));}}]);return DrawerSidebar;}(React.PureComponent);export default DrawerSidebar;var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-drawer/dist/views/DrawerSidebar.js"],"names":["React","NavigationActions","StackActions","invariant","DrawerSidebar","_getScreenOptions","routeKey","descriptor","props","descriptors","options","_getLabel","focused","tintColor","route","key","drawerLabel","title","routeName","_renderIcon","drawerIcon","_onItemPress","subAction","index","reset","actions","navigate","routes","navigation","dispatch","action","ContentComponent","contentComponent","state","styles","container","style","contentOptions","screenProps","drawerPosition","PureComponent","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { NavigationActions, StackActions } from 'react-navigation';\nimport invariant from '../utils/invariant';\n\n/**\n * Component that renders the sidebar screen of the drawer.\n */\n\nclass DrawerSidebar extends React.PureComponent {\n  _getScreenOptions = routeKey => {\n    const descriptor = this.props.descriptors[routeKey];\n    invariant(descriptor.options, 'Cannot access screen descriptor options from drawer sidebar');\n    return descriptor.options;\n  };\n\n  _getLabel = ({ focused, tintColor, route }) => {\n    const { drawerLabel, title } = this._getScreenOptions(route.key);\n    if (drawerLabel) {\n      return typeof drawerLabel === 'function' ? drawerLabel({ tintColor, focused }) : drawerLabel;\n    }\n\n    if (typeof title === 'string') {\n      return title;\n    }\n\n    return route.routeName;\n  };\n\n  _renderIcon = ({ focused, tintColor, route }) => {\n    const { drawerIcon } = this._getScreenOptions(route.key);\n    if (drawerIcon) {\n      return typeof drawerIcon === 'function' ? drawerIcon({ tintColor, focused }) : drawerIcon;\n    }\n    return null;\n  };\n\n  _onItemPress = ({ route, focused }) => {\n    if (!focused) {\n      let subAction;\n      // TODO (v3): Revisit and repeal this behavior:\n      // if the child screen is a StackRouter then always navigate to its first screen (see #1914)\n      if (route.index != null && route.index !== 0) {\n        subAction = StackActions.reset({\n          index: 0,\n          actions: [NavigationActions.navigate({\n            routeName: route.routes[0].routeName\n          })]\n        });\n      }\n      this.props.navigation.dispatch(NavigationActions.navigate({\n        routeName: route.routeName,\n        action: subAction\n      }));\n    }\n  };\n\n  render() {\n    const ContentComponent = this.props.contentComponent;\n    if (!ContentComponent) {\n      return null;\n    }\n    const { state } = this.props.navigation;\n    invariant(typeof state.index === 'number', 'should be set');\n    return <View style={[styles.container, this.props.style]}>\n        <ContentComponent {...this.props.contentOptions} navigation={this.props.navigation} descriptors={this.props.descriptors} items={state.routes} activeItemKey={state.routes[state.index] ? state.routes[state.index].key : null} screenProps={this.props.screenProps} getLabel={this._getLabel} renderIcon={this._renderIcon} onItemPress={this._onItemPress} drawerPosition={this.props.drawerPosition} />\n      </View>;\n  }\n}\n\nexport default DrawerSidebar;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});"]},"metadata":{},"sourceType":"module"}