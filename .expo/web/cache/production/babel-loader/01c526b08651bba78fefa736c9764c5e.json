{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import NativeModules from\"react-native-web/dist/exports/NativeModules\";import{StackActions}from'react-navigation';import StackViewLayout from\"./StackViewLayout\";import Transitioner from\"../Transitioner\";import TransitionConfigs from\"./StackViewTransitionConfigs\";var NativeAnimatedModule=NativeModules&&NativeModules.NativeAnimatedModule;var StackView=function(_React$Component){_inherits(StackView,_React$Component);var _super=_createSuper(StackView);function StackView(){var _this;_classCallCheck(this,StackView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this._configureTransition=function(transitionProps,prevTransitionProps){return _objectSpread(_objectSpread({},TransitionConfigs.getTransitionConfig(_this.props.navigationConfig.transitionConfig,transitionProps,prevTransitionProps,_this.props.navigationConfig.mode==='modal').transitionSpec),{},{useNativeDriver:!!NativeAnimatedModule});};_this._render=function(transitionProps,lastTransitionProps){var _this$props=_this.props,screenProps=_this$props.screenProps,navigationConfig=_this$props.navigationConfig;return React.createElement(StackViewLayout,_extends({},navigationConfig,{onGestureBegin:_this.props.onGestureBegin,onGestureCanceled:_this.props.onGestureCanceled,onGestureEnd:_this.props.onGestureEnd,screenProps:screenProps,descriptors:_this.props.descriptors,transitionProps:transitionProps,lastTransitionProps:lastTransitionProps}));};return _this;}_createClass(StackView,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(Transitioner,{render:this._render,configureTransition:this._configureTransition,screenProps:this.props.screenProps,navigation:this.props.navigation,descriptors:this.props.descriptors,onTransitionStart:this.props.onTransitionStart||this.props.navigationConfig.onTransitionStart,onTransitionEnd:function onTransitionEnd(transition,lastTransition){var _this2$props=_this2.props,navigationConfig=_this2$props.navigationConfig,navigation=_this2$props.navigation;var onTransitionEnd=_this2.props.onTransitionEnd||navigationConfig.onTransitionEnd;if(transition.navigation.state.isTransitioning){navigation.dispatch(StackActions.completeTransition({key:navigation.state.key}));}onTransitionEnd&&onTransitionEnd(transition,lastTransition);}});}}]);return StackView;}(React.Component);StackView.defaultProps={navigationConfig:{mode:'card'}};export default StackView;","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-stack/dist/views/StackView/StackView.js"],"names":["React","StackActions","StackViewLayout","Transitioner","TransitionConfigs","NativeAnimatedModule","NativeModules","StackView","_configureTransition","transitionProps","prevTransitionProps","getTransitionConfig","props","navigationConfig","transitionConfig","mode","transitionSpec","useNativeDriver","_render","lastTransitionProps","screenProps","onGestureBegin","onGestureCanceled","onGestureEnd","descriptors","navigation","onTransitionStart","transition","lastTransition","onTransitionEnd","state","isTransitioning","dispatch","completeTransition","key","Component","defaultProps"],"mappings":"o5DAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,uEAGA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,eAAP,yBACA,MAAOC,CAAAA,YAAP,uBACA,MAAOC,CAAAA,iBAAP,oCAEA,GAAMC,CAAAA,oBAAoB,CAAGC,aAAa,EAAIA,aAAa,CAACD,oBAA5D,C,GAEME,CAAAA,S,sUAoBJC,oB,CAAuB,SAACC,eAAD,CAAkBC,mBAAlB,CAA0C,CAC/D,sCACKN,iBAAiB,CAACO,mBAAlB,CAAsC,MAAKC,KAAL,CAAWC,gBAAX,CAA4BC,gBAAlE,CAAoFL,eAApF,CAAqGC,mBAArG,CAA0H,MAAKE,KAAL,CAAWC,gBAAX,CAA4BE,IAA5B,GAAqC,OAA/J,EAAwKC,cAD7K,MAEEC,eAAe,CAAE,CAAC,CAACZ,oBAFrB,GAID,C,OAEDa,O,CAAU,SAACT,eAAD,CAAkBU,mBAAlB,CAA0C,iBACR,MAAKP,KADG,CAC1CQ,WAD0C,aAC1CA,WAD0C,CAC7BP,gBAD6B,aAC7BA,gBAD6B,CAElD,MAAO,qBAAC,eAAD,aAAqBA,gBAArB,EAAuC,cAAc,CAAE,MAAKD,KAAL,CAAWS,cAAlE,CAAkF,iBAAiB,CAAE,MAAKT,KAAL,CAAWU,iBAAhH,CAAmI,YAAY,CAAE,MAAKV,KAAL,CAAWW,YAA5J,CAA0K,WAAW,CAAEH,WAAvL,CAAoM,WAAW,CAAE,MAAKR,KAAL,CAAWY,WAA5N,CAAyO,eAAe,CAAEf,eAA1P,CAA2Q,mBAAmB,CAAEU,mBAAhS,GAAP,CACD,C,4EAvBQ,iBACP,MAAO,qBAAC,YAAD,EAAc,MAAM,CAAE,KAAKD,OAA3B,CAAoC,mBAAmB,CAAE,KAAKV,oBAA9D,CAAoF,WAAW,CAAE,KAAKI,KAAL,CAAWQ,WAA5G,CAAyH,UAAU,CAAE,KAAKR,KAAL,CAAWa,UAAhJ,CAA4J,WAAW,CAAE,KAAKb,KAAL,CAAWY,WAApL,CAAiM,iBAAiB,CAAE,KAAKZ,KAAL,CAAWc,iBAAX,EAAgC,KAAKd,KAAL,CAAWC,gBAAX,CAA4Ba,iBAAhR,CAAmS,eAAe,CAAE,yBAACC,UAAD,CAAaC,cAAb,CAAgC,kBAChT,MAAI,CAAChB,KAD2S,CACjVC,gBADiV,cACjVA,gBADiV,CAC/TY,UAD+T,cAC/TA,UAD+T,CAEzV,GAAMI,CAAAA,eAAe,CAAG,MAAI,CAACjB,KAAL,CAAWiB,eAAX,EAA8BhB,gBAAgB,CAACgB,eAAvE,CACA,GAAIF,UAAU,CAACF,UAAX,CAAsBK,KAAtB,CAA4BC,eAAhC,CAAiD,CAC/CN,UAAU,CAACO,QAAX,CAAoB/B,YAAY,CAACgC,kBAAb,CAAgC,CAClDC,GAAG,CAAET,UAAU,CAACK,KAAX,CAAiBI,GAD4B,CAAhC,CAApB,EAGD,CACDL,eAAe,EAAIA,eAAe,CAACF,UAAD,CAAaC,cAAb,CAAlC,CACD,CATM,EAAP,CAUD,C,uBAlBqB5B,KAAK,CAACmC,S,EAAxB5B,S,CACG6B,Y,CAAe,CACpBvB,gBAAgB,CAAE,CAChBE,IAAI,CAAE,MADU,CADE,C,CAgCxB,cAAeR,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport { NativeModules } from 'react-native';\n\nimport { StackActions } from 'react-navigation';\nimport StackViewLayout from './StackViewLayout';\nimport Transitioner from '../Transitioner';\nimport TransitionConfigs from './StackViewTransitionConfigs';\n\nconst NativeAnimatedModule = NativeModules && NativeModules.NativeAnimatedModule;\n\nclass StackView extends React.Component {\n  static defaultProps = {\n    navigationConfig: {\n      mode: 'card'\n    }\n  };\n\n  render() {\n    return <Transitioner render={this._render} configureTransition={this._configureTransition} screenProps={this.props.screenProps} navigation={this.props.navigation} descriptors={this.props.descriptors} onTransitionStart={this.props.onTransitionStart || this.props.navigationConfig.onTransitionStart} onTransitionEnd={(transition, lastTransition) => {\n      const { navigationConfig, navigation } = this.props;\n      const onTransitionEnd = this.props.onTransitionEnd || navigationConfig.onTransitionEnd;\n      if (transition.navigation.state.isTransitioning) {\n        navigation.dispatch(StackActions.completeTransition({\n          key: navigation.state.key\n        }));\n      }\n      onTransitionEnd && onTransitionEnd(transition, lastTransition);\n    }} />;\n  }\n\n  _configureTransition = (transitionProps, prevTransitionProps) => {\n    return {\n      ...TransitionConfigs.getTransitionConfig(this.props.navigationConfig.transitionConfig, transitionProps, prevTransitionProps, this.props.navigationConfig.mode === 'modal').transitionSpec,\n      useNativeDriver: !!NativeAnimatedModule\n    };\n  };\n\n  _render = (transitionProps, lastTransitionProps) => {\n    const { screenProps, navigationConfig } = this.props;\n    return <StackViewLayout {...navigationConfig} onGestureBegin={this.props.onGestureBegin} onGestureCanceled={this.props.onGestureCanceled} onGestureEnd={this.props.onGestureEnd} screenProps={screenProps} descriptors={this.props.descriptors} transitionProps={transitionProps} lastTransitionProps={lastTransitionProps} />;\n  };\n}\n\nexport default StackView;"]},"metadata":{},"sourceType":"module"}