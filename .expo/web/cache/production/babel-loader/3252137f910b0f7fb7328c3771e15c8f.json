{"ast":null,"code":"import invariant from\"../utils/invariant\";function validateRouteConfigMap(routeConfigs){var routeNames=Object.keys(routeConfigs);invariant(routeNames.length>0,'Please specify at least one route when configuring a navigator.');routeNames.forEach(function(routeName){var routeConfig=routeConfigs[routeName];var screenComponent=getScreenComponent(routeConfig);if(!screenComponent||typeof screenComponent!=='function'&&typeof screenComponent!=='string'&&!routeConfig.getScreen){throw new Error(\"The component for route '\"+routeName+\"' must be a React component. For example:\\n\\nimport MyScreen from './MyScreen';\\n...\\n\"+routeName+\": MyScreen,\\n}\\n\\nYou can also use a navigator:\\n\\nimport MyNavigator from './MyNavigator';\\n...\\n\"+routeName+\": MyNavigator,\\n}\");}if(routeConfig.screen&&routeConfig.getScreen){throw new Error(\"Route '\"+routeName+\"' should declare a screen or a getScreen, not both.\");}});}function getScreenComponent(routeConfig){if(!routeConfig){return null;}return routeConfig.screen?routeConfig.screen:routeConfig;}export default validateRouteConfigMap;","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation/src/routers/validateRouteConfigMap.js"],"names":["invariant","validateRouteConfigMap","routeConfigs","routeNames","Object","keys","length","forEach","routeName","routeConfig","screenComponent","getScreenComponent","getScreen","Error","screen"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,0BAMA,QAASC,CAAAA,sBAAT,CAAgCC,YAAhC,CAA8C,CAC5C,GAAMC,CAAAA,UAAU,CAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,CAAnB,CACAF,SAAS,CACPG,UAAU,CAACG,MAAX,CAAoB,CADb,CAEP,iEAFO,CAAT,CAKAH,UAAU,CAACI,OAAX,CAAmB,SAAAC,SAAS,CAAI,CAC9B,GAAMC,CAAAA,WAAW,CAAGP,YAAY,CAACM,SAAD,CAAhC,CACA,GAAME,CAAAA,eAAe,CAAGC,kBAAkB,CAACF,WAAD,CAA1C,CAEA,GACE,CAACC,eAAD,EACC,MAAOA,CAAAA,eAAP,GAA2B,UAA3B,EACC,MAAOA,CAAAA,eAAP,GAA2B,QAD5B,EAEC,CAACD,WAAW,CAACG,SAJjB,CAKE,CACA,KAAM,IAAIC,CAAAA,KAAJ,6BAAsCL,SAAtC,0FAIVA,SAJU,sGAWVA,SAXU,qBAAN,CAaD,CAED,GAAIC,WAAW,CAACK,MAAZ,EAAsBL,WAAW,CAACG,SAAtC,CAAiD,CAC/C,KAAM,IAAIC,CAAAA,KAAJ,WACML,SADN,uDAAN,CAGD,CACF,CA9BD,EA+BD,CAED,QAASG,CAAAA,kBAAT,CAA4BF,WAA5B,CAAyC,CACvC,GAAI,CAACA,WAAL,CAAkB,CAChB,MAAO,KAAP,CACD,CAED,MAAOA,CAAAA,WAAW,CAACK,MAAZ,CAAqBL,WAAW,CAACK,MAAjC,CAA0CL,WAAjD,CACD,CAED,cAAeR,CAAAA,sBAAf","sourcesContent":["import invariant from '../utils/invariant';\n\n/**\n * Make sure the config passed e.g. to StackRouter, TabRouter has\n * the correct format, and throw a clear error if it doesn't.\n */\nfunction validateRouteConfigMap(routeConfigs) {\n  const routeNames = Object.keys(routeConfigs);\n  invariant(\n    routeNames.length > 0,\n    'Please specify at least one route when configuring a navigator.'\n  );\n\n  routeNames.forEach(routeName => {\n    const routeConfig = routeConfigs[routeName];\n    const screenComponent = getScreenComponent(routeConfig);\n\n    if (\n      !screenComponent ||\n      (typeof screenComponent !== 'function' &&\n        typeof screenComponent !== 'string' &&\n        !routeConfig.getScreen)\n    ) {\n      throw new Error(`The component for route '${routeName}' must be a React component. For example:\n\nimport MyScreen from './MyScreen';\n...\n${routeName}: MyScreen,\n}\n\nYou can also use a navigator:\n\nimport MyNavigator from './MyNavigator';\n...\n${routeName}: MyNavigator,\n}`);\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(\n        `Route '${routeName}' should declare a screen or a getScreen, not both.`\n      );\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexport default validateRouteConfigMap;\n"]},"metadata":{},"sourceType":"module"}