{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";import Linking from\"react-native-web/dist/exports/Linking\";import Platform from\"react-native-web/dist/exports/Platform\";import BackHandler from\"react-native-web/dist/exports/BackHandler\";import{polyfill}from'react-lifecycles-compat';import NavigationActions from\"./NavigationActions\";import getNavigation from\"./getNavigation\";import invariant from\"./utils/invariant\";import docsUrl from\"./utils/docsUrl\";import{urlToPathAndParams}from\"./routers/pathUtils\";function isStateful(props){return!props.navigation;}function validateProps(props){if(isStateful(props)){return;}var navigation=props.navigation,screenProps=props.screenProps,containerProps=_objectWithoutProperties(props,[\"navigation\",\"screenProps\"]);var keys=Object.keys(containerProps);if(keys.length!==0){throw new Error('This navigator has both navigation and container props, so it is '+(\"unclear if it should own its own state. Remove props: \\\"\"+keys.join(', ')+\"\\\" \")+'if the navigator should get its state from the navigation prop. If the '+'navigator should maintain its own state, do not pass a navigation prop.');}}var _statefulContainerCount=0;export function _TESTING_ONLY_reset_container_count(){_statefulContainerCount=0;}var _reactNavigationIsHydratingState=false;export default function createNavigationContainer(Component){var NavigationContainer=function(_React$Component){_inherits(NavigationContainer,_React$Component);var _super=_createSuper(NavigationContainer);_createClass(NavigationContainer,null,[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){validateProps(nextProps);return null;}}]);function NavigationContainer(props){var _this;_classCallCheck(this,NavigationContainer);_this=_super.call(this,props);_this.subs=null;_this._actionEventSubscribers=new Set();_this._handleOpenURL=function(_ref){var url=_ref.url;var _this$props=_this.props,enableURLHandling=_this$props.enableURLHandling,uriPrefix=_this$props.uriPrefix;if(enableURLHandling===false){return;}var parsedUrl=urlToPathAndParams(url,uriPrefix);if(parsedUrl){var path=parsedUrl.path,params=parsedUrl.params;var action=Component.router.getActionForPathAndParams(path,params);if(action){_this.dispatch(action);}}};_this._persistNavigationState=function _callee(nav){var persistenceKey;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:persistenceKey=_this.props.persistenceKey;if(persistenceKey){_context.next=3;break;}return _context.abrupt(\"return\");case 3:_context.next=5;return _regeneratorRuntime.awrap(AsyncStorage.setItem(persistenceKey,JSON.stringify(nav)));case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);};_this.dispatch=function(action){if(_this.props.navigation){return _this.props.navigation.dispatch(action);}_this._navState=_this._navState||_this.state.nav;var lastNavState=_this._navState;invariant(lastNavState,'should be set in constructor if stateful');var reducedState=Component.router.getStateForAction(action,lastNavState);var navState=reducedState===null?lastNavState:reducedState;var dispatchActionEvents=function dispatchActionEvents(){_this._actionEventSubscribers.forEach(function(subscriber){return subscriber({type:'action',action:action,state:navState,lastState:lastNavState});});};if(reducedState===null){dispatchActionEvents();return true;}if(navState!==lastNavState){_this._navState=navState;_this.setState({nav:navState},function(){_this._onNavigationStateChange(lastNavState,navState,action);dispatchActionEvents();_this._persistNavigationState(navState);});return true;}dispatchActionEvents();return false;};_this._getScreenProps=function(){return _this.props.screenProps;};validateProps(props);_this._initialAction=NavigationActions.init();if(_this._isStateful()){_this.subs=BackHandler.addEventListener('hardwareBackPress',function(){if(!_this._isMounted){_this.subs&&_this.subs.remove();}else{return _this.dispatch(NavigationActions.back());}});}_this.state={nav:_this._isStateful()&&!props.persistenceKey?Component.router.getStateForAction(_this._initialAction):null};return _this;}_createClass(NavigationContainer,[{key:\"_renderLoading\",value:function _renderLoading(){return this.props.renderLoadingExperimental?this.props.renderLoadingExperimental():null;}},{key:\"_isStateful\",value:function _isStateful(){return isStateful(this.props);}},{key:\"_validateProps\",value:function _validateProps(props){if(this._isStateful()){return;}var navigation=props.navigation,screenProps=props.screenProps,containerProps=_objectWithoutProperties(props,[\"navigation\",\"screenProps\"]);var keys=Object.keys(containerProps);if(keys.length!==0){throw new Error('This navigator has both navigation and container props, so it is '+(\"unclear if it should own its own state. Remove props: \\\"\"+keys.join(', ')+\"\\\" \")+'if the navigator should get its state from the navigation prop. If the '+'navigator should maintain its own state, do not pass a navigation prop.');}}},{key:\"_onNavigationStateChange\",value:function _onNavigationStateChange(prevNav,nav,action){if(typeof this.props.onNavigationStateChange==='undefined'&&this._isStateful()&&!!process.env.REACT_NAV_LOGGING){if(console.group){console.group('Navigation Dispatch: ');console.log('Action: ',action);console.log('New State: ',nav);console.log('Last State: ',prevNav);console.groupEnd();}else{console.log('Navigation Dispatch: ',{action:action,newState:nav,lastState:prevNav});}return;}if(typeof this.props.onNavigationStateChange==='function'){this.props.onNavigationStateChange(prevNav,nav,action);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this._navState===this.state.nav){this._navState=null;}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var _this$props2,persistenceKey,uriPrefix,enableURLHandling,parsedUrl,startupStateJSON,_url,action,startupState,_parsedUrl,path,params,urlAction,dispatchActions;return _regeneratorRuntime.async(function componentDidMount$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:this._isMounted=true;if(this._isStateful()){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:if(__DEV__&&!this.props.detached){if(_statefulContainerCount>0){if(Platform.OS==='ios'){console.warn(\"You should only render one navigator explicitly in your app, and other navigators should by rendered by including them in that navigator. Full details at: \"+docsUrl('common-mistakes.html#explicitly-rendering-more-than-one-navigator'));}}}_statefulContainerCount++;Linking.addEventListener('url',this._handleOpenURL);_this$props2=this.props,persistenceKey=_this$props2.persistenceKey,uriPrefix=_this$props2.uriPrefix,enableURLHandling=_this$props2.enableURLHandling;parsedUrl=null;startupStateJSON=null;if(!(enableURLHandling!==false)){_context2.next=20;break;}_context2.t0=persistenceKey;if(!_context2.t0){_context2.next=15;break;}_context2.next=14;return _regeneratorRuntime.awrap(AsyncStorage.getItem(persistenceKey));case 14:_context2.t0=_context2.sent;case 15:startupStateJSON=_context2.t0;_context2.next=18;return _regeneratorRuntime.awrap(Linking.getInitialURL());case 18:_url=_context2.sent;parsedUrl=_url&&urlToPathAndParams(_url,uriPrefix);case 20:action=this._initialAction;startupState=this.state.nav;if(!startupState){!!process.env.REACT_NAV_LOGGING&&console.log('Init new Navigation State');startupState=Component.router.getStateForAction(action);}if(startupStateJSON){try{startupState=JSON.parse(startupStateJSON);_reactNavigationIsHydratingState=true;}catch(e){}}if(parsedUrl){_parsedUrl=parsedUrl,path=_parsedUrl.path,params=_parsedUrl.params;urlAction=Component.router.getActionForPathAndParams(path,params);if(urlAction){!!process.env.REACT_NAV_LOGGING&&console.log('Applying Navigation Action for Initial URL:',url);action=urlAction;startupState=Component.router.getStateForAction(urlAction,startupState);}}dispatchActions=function dispatchActions(){return _this2._actionEventSubscribers.forEach(function(subscriber){return subscriber({type:'action',action:action,state:_this2.state.nav,lastState:null});});};if(!(startupState===this.state.nav)){_context2.next=29;break;}dispatchActions();return _context2.abrupt(\"return\");case 29:this.setState({nav:startupState},function(){_reactNavigationIsHydratingState=false;dispatchActions();});case 30:case\"end\":return _context2.stop();}}},null,this,null,Promise);}},{key:\"componentDidCatch\",value:function componentDidCatch(e,errorInfo){if(_reactNavigationIsHydratingState){_reactNavigationIsHydratingState=false;console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state..');this.dispatch(NavigationActions.init());}else{throw e;}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._isMounted=false;Linking.removeEventListener('url',this._handleOpenURL);this.subs&&this.subs.remove();if(this._isStateful()){_statefulContainerCount--;}}},{key:\"render\",value:function render(){var _this3=this;var navigation=this.props.navigation;if(this._isStateful()){var navState=this.state.nav;if(!navState){return this._renderLoading();}if(!this._navigation||this._navigation.state!==navState){this._navigation=getNavigation(Component.router,navState,this.dispatch,this._actionEventSubscribers,this._getScreenProps,function(){return _this3._navigation;});}navigation=this._navigation;}invariant(navigation,'failed to get navigation');return React.createElement(Component,_extends({},this.props,{navigation:navigation}));}}]);return NavigationContainer;}(React.Component);NavigationContainer.router=Component.router;NavigationContainer.navigationOptions=null;return polyfill(NavigationContainer);}","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation/src/createNavigationContainer.js"],"names":["React","polyfill","NavigationActions","getNavigation","invariant","docsUrl","urlToPathAndParams","isStateful","props","navigation","validateProps","screenProps","containerProps","keys","Object","length","Error","join","_statefulContainerCount","_TESTING_ONLY_reset_container_count","_reactNavigationIsHydratingState","createNavigationContainer","Component","NavigationContainer","nextProps","prevState","subs","_actionEventSubscribers","Set","_handleOpenURL","url","enableURLHandling","uriPrefix","parsedUrl","path","params","action","router","getActionForPathAndParams","dispatch","_persistNavigationState","nav","persistenceKey","AsyncStorage","setItem","JSON","stringify","_navState","state","lastNavState","reducedState","getStateForAction","navState","dispatchActionEvents","forEach","subscriber","type","lastState","setState","_onNavigationStateChange","_getScreenProps","_initialAction","init","_isStateful","BackHandler","addEventListener","_isMounted","remove","back","renderLoadingExperimental","prevNav","onNavigationStateChange","process","env","REACT_NAV_LOGGING","console","group","log","groupEnd","newState","__DEV__","detached","Platform","OS","warn","Linking","startupStateJSON","getItem","getInitialURL","startupState","parse","e","urlAction","dispatchActions","errorInfo","removeEventListener","_renderLoading","_navigation","navigationOptions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AsyncStorage, Linking, Platform, BackHandler } from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\n\nimport NavigationActions from './NavigationActions';\nimport getNavigation from './getNavigation';\nimport invariant from './utils/invariant';\nimport docsUrl from './utils/docsUrl';\nimport { urlToPathAndParams } from './routers/pathUtils';\n\nfunction isStateful(props) {\n  return !props.navigation;\n}\n\nfunction validateProps(props) {\n  if (isStateful(props)) {\n    return;\n  }\n\n  const { navigation, screenProps, ...containerProps } = props;\n\n  const keys = Object.keys(containerProps);\n\n  if (keys.length !== 0) {\n    throw new Error(\n      'This navigator has both navigation and container props, so it is ' +\n        `unclear if it should own its own state. Remove props: \"${keys.join(\n          ', '\n        )}\" ` +\n        'if the navigator should get its state from the navigation prop. If the ' +\n        'navigator should maintain its own state, do not pass a navigation prop.'\n    );\n  }\n}\n\n// Track the number of stateful container instances. Warn if >0 and not using the\n// detached prop to explicitly acknowledge the behavior. We should deprecated implicit\n// stateful navigation containers in a future release and require a provider style pattern\n// instead in order to eliminate confusion entirely.\nlet _statefulContainerCount = 0;\nexport function _TESTING_ONLY_reset_container_count() {\n  _statefulContainerCount = 0;\n}\n\n// We keep a global flag to catch errors during the state persistence hydrating scenario.\n// The innermost navigator who catches the error will dispatch a new init action.\nlet _reactNavigationIsHydratingState = false;\n// Unfortunate to use global state here, but it seems necessesary for the time\n// being. There seems to be some problems with cascading componentDidCatch\n// handlers. Ideally the inner non-stateful navigator catches the error and\n// re-throws it, to be caught by the top-level stateful navigator.\n\n/**\n * Create an HOC that injects the navigation and manages the navigation state\n * in case it's not passed from above.\n * This allows to use e.g. the StackNavigator and TabNavigator as root-level\n * components.\n */\nexport default function createNavigationContainer(Component) {\n  class NavigationContainer extends React.Component {\n    subs = null;\n\n    static router = Component.router;\n    static navigationOptions = null;\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      validateProps(nextProps);\n      return null;\n    }\n\n    _actionEventSubscribers = new Set();\n\n    constructor(props) {\n      super(props);\n\n      validateProps(props);\n\n      this._initialAction = NavigationActions.init();\n\n      if (this._isStateful()) {\n        this.subs = BackHandler.addEventListener('hardwareBackPress', () => {\n          if (!this._isMounted) {\n            this.subs && this.subs.remove();\n          } else {\n            // dispatch returns true if the action results in a state change,\n            // and false otherwise. This maps well to what BackHandler expects\n            // from a callback -- true if handled, false if not handled\n            return this.dispatch(NavigationActions.back());\n          }\n        });\n      }\n\n      this.state = {\n        nav:\n          this._isStateful() && !props.persistenceKey\n            ? Component.router.getStateForAction(this._initialAction)\n            : null,\n      };\n    }\n\n    _renderLoading() {\n      return this.props.renderLoadingExperimental\n        ? this.props.renderLoadingExperimental()\n        : null;\n    }\n\n    _isStateful() {\n      return isStateful(this.props);\n    }\n\n    _validateProps(props) {\n      if (this._isStateful()) {\n        return;\n      }\n\n      const { navigation, screenProps, ...containerProps } = props;\n\n      const keys = Object.keys(containerProps);\n\n      if (keys.length !== 0) {\n        throw new Error(\n          'This navigator has both navigation and container props, so it is ' +\n            `unclear if it should own its own state. Remove props: \"${keys.join(\n              ', '\n            )}\" ` +\n            'if the navigator should get its state from the navigation prop. If the ' +\n            'navigator should maintain its own state, do not pass a navigation prop.'\n        );\n      }\n    }\n\n    _handleOpenURL = ({ url }) => {\n      const { enableURLHandling, uriPrefix } = this.props;\n      if (enableURLHandling === false) {\n        return;\n      }\n      const parsedUrl = urlToPathAndParams(url, uriPrefix);\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const action = Component.router.getActionForPathAndParams(path, params);\n        if (action) {\n          this.dispatch(action);\n        }\n      }\n    };\n\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (\n        typeof this.props.onNavigationStateChange === 'undefined' &&\n        this._isStateful() &&\n        !!process.env.REACT_NAV_LOGGING\n      ) {\n        /* eslint-disable no-console */\n        if (console.group) {\n          console.group('Navigation Dispatch: ');\n          console.log('Action: ', action);\n          console.log('New State: ', nav);\n          console.log('Last State: ', prevNav);\n          console.groupEnd();\n        } else {\n          console.log('Navigation Dispatch: ', {\n            action,\n            newState: nav,\n            lastState: prevNav,\n          });\n        }\n        /* eslint-enable no-console */\n        return;\n      }\n\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    componentDidUpdate() {\n      // Clear cached _navState every tick\n      if (this._navState === this.state.nav) {\n        this._navState = null;\n      }\n    }\n\n    async componentDidMount() {\n      this._isMounted = true;\n      if (!this._isStateful()) {\n        return;\n      }\n\n      if (__DEV__ && !this.props.detached) {\n        if (_statefulContainerCount > 0) {\n          // Temporarily only show this on iOS due to this issue:\n          // https://github.com/react-navigation/react-navigation/issues/4196#issuecomment-390827829\n          if (Platform.OS === 'ios') {\n            console.warn(\n              `You should only render one navigator explicitly in your app, and other navigators should by rendered by including them in that navigator. Full details at: ${docsUrl(\n                'common-mistakes.html#explicitly-rendering-more-than-one-navigator'\n              )}`\n            );\n          }\n        }\n      }\n      _statefulContainerCount++;\n      Linking.addEventListener('url', this._handleOpenURL);\n\n      // Pull out anything that can impact state\n      const { persistenceKey, uriPrefix, enableURLHandling } = this.props;\n      let parsedUrl = null;\n      let startupStateJSON = null;\n      if (enableURLHandling !== false) {\n        startupStateJSON =\n          persistenceKey && (await AsyncStorage.getItem(persistenceKey));\n        const url = await Linking.getInitialURL();\n        parsedUrl = url && urlToPathAndParams(url, uriPrefix);\n      }\n\n      // Initialize state. This must be done *after* any async code\n      // so we don't end up with a different value for this.state.nav\n      // due to changes while async function was resolving\n      let action = this._initialAction;\n      let startupState = this.state.nav;\n      if (!startupState) {\n        !!process.env.REACT_NAV_LOGGING &&\n          console.log('Init new Navigation State');\n        startupState = Component.router.getStateForAction(action);\n      }\n\n      // Pull persisted state from AsyncStorage\n      if (startupStateJSON) {\n        try {\n          startupState = JSON.parse(startupStateJSON);\n          _reactNavigationIsHydratingState = true;\n        } catch (e) {}\n      }\n\n      // Pull state out of URL\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const urlAction = Component.router.getActionForPathAndParams(\n          path,\n          params\n        );\n        if (urlAction) {\n          !!process.env.REACT_NAV_LOGGING &&\n            console.log('Applying Navigation Action for Initial URL:', url);\n          action = urlAction;\n          startupState = Component.router.getStateForAction(\n            urlAction,\n            startupState\n          );\n        }\n      }\n\n      const dispatchActions = () =>\n        this._actionEventSubscribers.forEach(subscriber =>\n          subscriber({\n            type: 'action',\n            action,\n            state: this.state.nav,\n            lastState: null,\n          })\n        );\n\n      if (startupState === this.state.nav) {\n        dispatchActions();\n        return;\n      }\n\n      this.setState({ nav: startupState }, () => {\n        _reactNavigationIsHydratingState = false;\n        dispatchActions();\n      });\n    }\n\n    componentDidCatch(e, errorInfo) {\n      if (_reactNavigationIsHydratingState) {\n        _reactNavigationIsHydratingState = false;\n        console.warn(\n          'Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state..'\n        );\n        this.dispatch(NavigationActions.init());\n      } else {\n        throw e;\n      }\n    }\n\n    _persistNavigationState = async nav => {\n      const { persistenceKey } = this.props;\n      if (!persistenceKey) {\n        return;\n      }\n      await AsyncStorage.setItem(persistenceKey, JSON.stringify(nav));\n    };\n\n    componentWillUnmount() {\n      this._isMounted = false;\n      Linking.removeEventListener('url', this._handleOpenURL);\n      this.subs && this.subs.remove();\n\n      if (this._isStateful()) {\n        _statefulContainerCount--;\n      }\n    }\n\n    // Per-tick temporary storage for state.nav\n\n    dispatch = action => {\n      if (this.props.navigation) {\n        return this.props.navigation.dispatch(action);\n      }\n\n      // navState will have the most up-to-date value, because setState sometimes behaves asyncronously\n      this._navState = this._navState || this.state.nav;\n      const lastNavState = this._navState;\n      invariant(lastNavState, 'should be set in constructor if stateful');\n      const reducedState = Component.router.getStateForAction(\n        action,\n        lastNavState\n      );\n      const navState = reducedState === null ? lastNavState : reducedState;\n\n      const dispatchActionEvents = () => {\n        this._actionEventSubscribers.forEach(subscriber =>\n          subscriber({\n            type: 'action',\n            action,\n            state: navState,\n            lastState: lastNavState,\n          })\n        );\n      };\n\n      if (reducedState === null) {\n        // The router will return null when action has been handled and the state hasn't changed.\n        // dispatch returns true when something has been handled.\n        dispatchActionEvents();\n        return true;\n      }\n\n      if (navState !== lastNavState) {\n        // Cache updates to state.nav during the tick to ensure that subsequent calls will not discard this change\n        this._navState = navState;\n        this.setState({ nav: navState }, () => {\n          this._onNavigationStateChange(lastNavState, navState, action);\n          dispatchActionEvents();\n          this._persistNavigationState(navState);\n        });\n        return true;\n      }\n\n      dispatchActionEvents();\n      return false;\n    };\n\n    _getScreenProps = () => this.props.screenProps;\n\n    render() {\n      let navigation = this.props.navigation;\n      if (this._isStateful()) {\n        const navState = this.state.nav;\n        if (!navState) {\n          return this._renderLoading();\n        }\n        if (!this._navigation || this._navigation.state !== navState) {\n          this._navigation = getNavigation(\n            Component.router,\n            navState,\n            this.dispatch,\n            this._actionEventSubscribers,\n            this._getScreenProps,\n            () => this._navigation\n          );\n        }\n        navigation = this._navigation;\n      }\n      invariant(navigation, 'failed to get navigation');\n      return <Component {...this.props} navigation={navigation} />;\n    }\n  }\n\n  return polyfill(NavigationContainer);\n}\n"]},"metadata":{},"sourceType":"module"}