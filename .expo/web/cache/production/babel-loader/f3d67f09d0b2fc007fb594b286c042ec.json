{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{polyfill}from'react-lifecycles-compat';import createTabNavigator from\"../utils/createTabNavigator\";import BottomTabBar from\"../views/BottomTabBar\";import ResourceSavingScene from\"../views/ResourceSavingScene\";var TabNavigationView=function(_React$PureComponent){_inherits(TabNavigationView,_React$PureComponent);var _super=_createSuper(TabNavigationView);function TabNavigationView(){var _this;_classCallCheck(this,TabNavigationView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={loaded:[_this.props.navigation.state.index]};_this._renderTabBar=function(){var _this$props=_this.props,_this$props$tabBarCom=_this$props.tabBarComponent,TabBarComponent=_this$props$tabBarCom===void 0?BottomTabBar:_this$props$tabBarCom,tabBarOptions=_this$props.tabBarOptions,navigation=_this$props.navigation,screenProps=_this$props.screenProps,getLabelText=_this$props.getLabelText,getAccessibilityLabel=_this$props.getAccessibilityLabel,getButtonComponent=_this$props.getButtonComponent,getTestID=_this$props.getTestID,renderIcon=_this$props.renderIcon,onTabPress=_this$props.onTabPress;var descriptors=_this.props.descriptors;var state=_this.props.navigation.state;var route=state.routes[state.index];var descriptor=descriptors[route.key];var options=descriptor.options;if(options.tabBarVisible===false){return null;}return React.createElement(TabBarComponent,_extends({},tabBarOptions,{jumpTo:_this._jumpTo,navigation:navigation,screenProps:screenProps,onTabPress:onTabPress,getLabelText:getLabelText,getButtonComponent:getButtonComponent,getAccessibilityLabel:getAccessibilityLabel,getTestID:getTestID,renderIcon:renderIcon}));};_this._jumpTo=function(key){var _this$props2=_this.props,navigation=_this$props2.navigation,onIndexChange=_this$props2.onIndexChange;var index=navigation.state.routes.findIndex(function(route){return route.key===key;});onIndexChange(index);};return _this;}_createClass(TabNavigationView,[{key:\"render\",value:function render(){var _this$props3=this.props,navigation=_this$props3.navigation,renderScene=_this$props3.renderScene,lazy=_this$props3.lazy;var routes=navigation.state.routes;var loaded=this.state.loaded;return React.createElement(View,{style:styles.container},React.createElement(View,{style:styles.pages},routes.map(function(route,index){if(lazy&&!loaded.includes(index)){return null;}var isFocused=navigation.state.index===index;return React.createElement(ResourceSavingScene,{key:route.key,style:[StyleSheet.absoluteFill,{opacity:isFocused?1:0}],isVisible:isFocused},renderScene({route:route}));})),this._renderTabBar());}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){var index=nextProps.navigation.state.index;return{loaded:prevState.loaded.includes(index)?prevState.loaded:[].concat(_toConsumableArray(prevState.loaded),[index])};}}]);return TabNavigationView;}(React.PureComponent);TabNavigationView.defaultProps={lazy:true};polyfill(TabNavigationView);var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},pages:{flex:1}});export default createTabNavigator(TabNavigationView);","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-tabs/dist/navigators/createBottomTabNavigator.js"],"names":["React","polyfill","createTabNavigator","BottomTabBar","ResourceSavingScene","TabNavigationView","state","loaded","props","navigation","index","_renderTabBar","tabBarComponent","TabBarComponent","tabBarOptions","screenProps","getLabelText","getAccessibilityLabel","getButtonComponent","getTestID","renderIcon","onTabPress","descriptors","route","routes","descriptor","key","options","tabBarVisible","_jumpTo","onIndexChange","findIndex","renderScene","lazy","styles","container","pages","map","includes","isFocused","StyleSheet","absoluteFill","opacity","nextProps","prevState","PureComponent","defaultProps","create","flex","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createTabNavigator from '../utils/createTabNavigator';\nimport BottomTabBar from '../views/BottomTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\n\nclass TabNavigationView extends React.PureComponent {\n  static defaultProps = {\n    lazy: true\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { index } = nextProps.navigation.state;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(index) ? prevState.loaded : [...prevState.loaded, index]\n    };\n  }\n\n  state = {\n    loaded: [this.props.navigation.state.index]\n  };\n\n  _renderTabBar = () => {\n    const {\n      tabBarComponent: TabBarComponent = BottomTabBar,\n      tabBarOptions,\n      navigation,\n      screenProps,\n      getLabelText,\n      getAccessibilityLabel,\n      getButtonComponent,\n      getTestID,\n      renderIcon,\n      onTabPress\n    } = this.props;\n\n    const { descriptors } = this.props;\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarVisible === false) {\n      return null;\n    }\n\n    return <TabBarComponent {...tabBarOptions} jumpTo={this._jumpTo} navigation={navigation} screenProps={screenProps} onTabPress={onTabPress} getLabelText={getLabelText} getButtonComponent={getButtonComponent} getAccessibilityLabel={getAccessibilityLabel} getTestID={getTestID} renderIcon={renderIcon} />;\n  };\n\n  _jumpTo = key => {\n    const { navigation, onIndexChange } = this.props;\n\n    const index = navigation.state.routes.findIndex(route => route.key === key);\n\n    onIndexChange(index);\n  };\n\n  render() {\n    const { navigation, renderScene, lazy } = this.props;\n    const { routes } = navigation.state;\n    const { loaded } = this.state;\n\n    return <View style={styles.container}>\n        <View style={styles.pages}>\n          {routes.map((route, index) => {\n          if (lazy && !loaded.includes(index)) {\n            // Don't render a screen if we've never navigated to it\n            return null;\n          }\n\n          const isFocused = navigation.state.index === index;\n\n          return <ResourceSavingScene key={route.key} style={[StyleSheet.absoluteFill, { opacity: isFocused ? 1 : 0 }]} isVisible={isFocused}>\n                {renderScene({ route })}\n              </ResourceSavingScene>;\n        })}\n        </View>\n        {this._renderTabBar()}\n      </View>;\n  }\n}\n\npolyfill(TabNavigationView);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  pages: {\n    flex: 1\n  }\n});\n\nexport default createTabNavigator(TabNavigationView);"]},"metadata":{},"sourceType":"module"}