{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import DrawerLayout from'react-native-drawer-layout-polyfill';import{SceneView}from'react-navigation';import DrawerSidebar from\"./DrawerSidebar\";import DrawerActions from\"../routers/DrawerActions\";var DrawerView=function(_React$PureComponent){_inherits(DrawerView,_React$PureComponent);var _super=_createSuper(DrawerView);function DrawerView(){var _this;_classCallCheck(this,DrawerView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={drawerWidth:typeof _this.props.navigationConfig.drawerWidth==='function'?_this.props.navigationConfig.drawerWidth():_this.props.navigationConfig.drawerWidth};_this._handleDrawerOpen=function(){_this.props.navigation.dispatch({type:DrawerActions.DRAWER_OPENED,key:_this.props.navigation.state.key});};_this._handleDrawerClose=function(){_this.props.navigation.dispatch({type:DrawerActions.DRAWER_CLOSED,key:_this.props.navigation.state.key});};_this._updateWidth=function(){var drawerWidth=typeof _this.props.navigationConfig.drawerWidth==='function'?_this.props.navigationConfig.drawerWidth():_this.props.navigationConfig.drawerWidth;if(_this.state.drawerWidth!==drawerWidth){_this.setState({drawerWidth:drawerWidth});}};_this._renderNavigationView=function(){return React.createElement(DrawerSidebar,_extends({screenProps:_this.props.screenProps,navigation:_this.props.navigation,descriptors:_this.props.descriptors,contentComponent:_this.props.navigationConfig.contentComponent,contentOptions:_this.props.navigationConfig.contentOptions,drawerPosition:_this.props.navigationConfig.drawerPosition,style:_this.props.navigationConfig.style},_this.props.navigationConfig));};return _this;}_createClass(DrawerView,[{key:\"componentDidMount\",value:function componentDidMount(){Dimensions.addEventListener('change',this._updateWidth);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props$navigatio=this.props.navigation.state,openId=_this$props$navigatio.openId,closeId=_this$props$navigatio.closeId,toggleId=_this$props$navigatio.toggleId,isDrawerOpen=_this$props$navigatio.isDrawerOpen;var _prevProps$navigation=prevProps.navigation.state,prevOpenId=_prevProps$navigation.openId,prevCloseId=_prevProps$navigation.closeId,prevToggleId=_prevProps$navigation.toggleId;if(openId!==prevOpenId){this._drawer.openDrawer();}else if(closeId!==prevCloseId){this._drawer.closeDrawer();}else if(toggleId!==prevToggleId){if(isDrawerOpen){this._drawer.closeDrawer();}else{this._drawer.openDrawer();}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){Dimensions.removeEventListener('change',this._updateWidth);}},{key:\"render\",value:function render(){var _this2=this;var state=this.props.navigation.state;var activeKey=state.routes[state.index].key;var descriptor=this.props.descriptors[activeKey];var drawerLockMode=descriptor.options.drawerLockMode;return React.createElement(DrawerLayout,{ref:function ref(c){_this2._drawer=c;},drawerLockMode:drawerLockMode||this.props.screenProps&&this.props.screenProps.drawerLockMode||this.props.navigationConfig.drawerLockMode,drawerBackgroundColor:this.props.navigationConfig.drawerBackgroundColor,drawerWidth:this.state.drawerWidth,onDrawerOpen:this._handleDrawerOpen,onDrawerClose:this._handleDrawerClose,useNativeAnimations:this.props.navigationConfig.useNativeAnimations,renderNavigationView:this._renderNavigationView,drawerPosition:this.props.navigationConfig.drawerPosition==='right'?DrawerLayout.positions.Right:DrawerLayout.positions.Left},React.createElement(SceneView,{navigation:descriptor.navigation,screenProps:this.props.screenProps,component:descriptor.getComponent()}));}}]);return DrawerView;}(React.PureComponent);export{DrawerView as default};","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-drawer/dist/views/DrawerView.js"],"names":["React","DrawerLayout","SceneView","DrawerSidebar","DrawerActions","DrawerView","state","drawerWidth","props","navigationConfig","_handleDrawerOpen","navigation","dispatch","type","DRAWER_OPENED","key","_handleDrawerClose","DRAWER_CLOSED","_updateWidth","setState","_renderNavigationView","screenProps","descriptors","contentComponent","contentOptions","drawerPosition","style","Dimensions","addEventListener","prevProps","openId","closeId","toggleId","isDrawerOpen","prevOpenId","prevCloseId","prevToggleId","_drawer","openDrawer","closeDrawer","removeEventListener","activeKey","routes","index","descriptor","drawerLockMode","options","c","drawerBackgroundColor","useNativeAnimations","positions","Right","Left","getComponent","PureComponent"],"mappings":"qjCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,iEAEA,MAAOC,CAAAA,YAAP,KAAyB,qCAAzB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,MAAOC,CAAAA,aAAP,uBACA,MAAOC,CAAAA,aAAP,gC,GAKqBC,CAAAA,U,kVACnBC,K,CAAQ,CACNC,WAAW,CAAE,MAAO,OAAKC,KAAL,CAAWC,gBAAX,CAA4BF,WAAnC,GAAmD,UAAnD,CAAgE,MAAKC,KAAL,CAAWC,gBAAX,CAA4BF,WAA5B,EAAhE,CAA4G,MAAKC,KAAL,CAAWC,gBAAX,CAA4BF,WAD/I,C,OAsCRG,iB,CAAoB,UAAM,CACxB,MAAKF,KAAL,CAAWG,UAAX,CAAsBC,QAAtB,CAA+B,CAC7BC,IAAI,CAAET,aAAa,CAACU,aADS,CAE7BC,GAAG,CAAE,MAAKP,KAAL,CAAWG,UAAX,CAAsBL,KAAtB,CAA4BS,GAFJ,CAA/B,EAID,C,OAEDC,kB,CAAqB,UAAM,CACzB,MAAKR,KAAL,CAAWG,UAAX,CAAsBC,QAAtB,CAA+B,CAC7BC,IAAI,CAAET,aAAa,CAACa,aADS,CAE7BF,GAAG,CAAE,MAAKP,KAAL,CAAWG,UAAX,CAAsBL,KAAtB,CAA4BS,GAFJ,CAA/B,EAID,C,OAEDG,Y,CAAe,UAAM,CACnB,GAAMX,CAAAA,WAAW,CAAG,MAAO,OAAKC,KAAL,CAAWC,gBAAX,CAA4BF,WAAnC,GAAmD,UAAnD,CAAgE,MAAKC,KAAL,CAAWC,gBAAX,CAA4BF,WAA5B,EAAhE,CAA4G,MAAKC,KAAL,CAAWC,gBAAX,CAA4BF,WAA5J,CAEA,GAAI,MAAKD,KAAL,CAAWC,WAAX,GAA2BA,WAA/B,CAA4C,CAC1C,MAAKY,QAAL,CAAc,CAAEZ,WAAW,CAAXA,WAAF,CAAd,EACD,CACF,C,OAEDa,qB,CAAwB,UAAM,CAC5B,MAAO,qBAAC,aAAD,WAAe,WAAW,CAAE,MAAKZ,KAAL,CAAWa,WAAvC,CAAoD,UAAU,CAAE,MAAKb,KAAL,CAAWG,UAA3E,CAAuF,WAAW,CAAE,MAAKH,KAAL,CAAWc,WAA/G,CAA4H,gBAAgB,CAAE,MAAKd,KAAL,CAAWC,gBAAX,CAA4Bc,gBAA1K,CAA4L,cAAc,CAAE,MAAKf,KAAL,CAAWC,gBAAX,CAA4Be,cAAxO,CAAwP,cAAc,CAAE,MAAKhB,KAAL,CAAWC,gBAAX,CAA4BgB,cAApS,CAAoT,KAAK,CAAE,MAAKjB,KAAL,CAAWC,gBAAX,CAA4BiB,KAAvV,EAAkW,MAAKlB,KAAL,CAAWC,gBAA7W,EAAP,CACD,C,mGA1DmB,CAClBkB,UAAU,CAACC,gBAAX,CAA4B,QAA5B,CAAsC,KAAKV,YAA3C,EACD,C,8DAEkBW,S,CAAW,2BAMxB,KAAKrB,KAAL,CAAWG,UAAX,CAAsBL,KANE,CAE1BwB,MAF0B,uBAE1BA,MAF0B,CAG1BC,OAH0B,uBAG1BA,OAH0B,CAI1BC,QAJ0B,uBAI1BA,QAJ0B,CAK1BC,YAL0B,uBAK1BA,YAL0B,2BAWxBJ,SAAS,CAAClB,UAAV,CAAqBL,KAXG,CAQlB4B,UARkB,uBAQ1BJ,MAR0B,CASjBK,WATiB,uBAS1BJ,OAT0B,CAUhBK,YAVgB,uBAU1BJ,QAV0B,CAa5B,GAAIF,MAAM,GAAKI,UAAf,CAA2B,CACzB,KAAKG,OAAL,CAAaC,UAAb,GACD,CAFD,IAEO,IAAIP,OAAO,GAAKI,WAAhB,CAA6B,CAClC,KAAKE,OAAL,CAAaE,WAAb,GACD,CAFM,IAEA,IAAIP,QAAQ,GAAKI,YAAjB,CAA+B,CACpC,GAAIH,YAAJ,CAAkB,CAChB,KAAKI,OAAL,CAAaE,WAAb,GACD,CAFD,IAEO,CACL,KAAKF,OAAL,CAAaC,UAAb,GACD,CACF,CACF,C,mEAEsB,CACrBX,UAAU,CAACa,mBAAX,CAA+B,QAA/B,CAAyC,KAAKtB,YAA9C,EACD,C,uCA4BQ,oBACCZ,CAAAA,KADD,CACW,KAAKE,KAAL,CAAWG,UADtB,CACCL,KADD,CAEP,GAAMmC,CAAAA,SAAS,CAAGnC,KAAK,CAACoC,MAAN,CAAapC,KAAK,CAACqC,KAAnB,EAA0B5B,GAA5C,CACA,GAAM6B,CAAAA,UAAU,CAAG,KAAKpC,KAAL,CAAWc,WAAX,CAAuBmB,SAAvB,CAAnB,CAHO,GAKCI,CAAAA,cALD,CAKoBD,UAAU,CAACE,OAL/B,CAKCD,cALD,CAOP,MAAO,qBAAC,YAAD,EAAc,GAAG,CAAE,aAAAE,CAAC,CAAI,CAC7B,MAAI,CAACV,OAAL,CAAeU,CAAf,CACD,CAFM,CAEJ,cAAc,CAAEF,cAAc,EAAI,KAAKrC,KAAL,CAAWa,WAAX,EAA0B,KAAKb,KAAL,CAAWa,WAAX,CAAuBwB,cAAnE,EAAqF,KAAKrC,KAAL,CAAWC,gBAAX,CAA4BoC,cAF7H,CAE6I,qBAAqB,CAAE,KAAKrC,KAAL,CAAWC,gBAAX,CAA4BuC,qBAFhM,CAEuN,WAAW,CAAE,KAAK1C,KAAL,CAAWC,WAF/O,CAE4P,YAAY,CAAE,KAAKG,iBAF/Q,CAEkS,aAAa,CAAE,KAAKM,kBAFtT,CAE0U,mBAAmB,CAAE,KAAKR,KAAL,CAAWC,gBAAX,CAA4BwC,mBAF3X,CAEgZ,oBAAoB,CAAE,KAAK7B,qBAF3a,CAEkc,cAAc,CAAE,KAAKZ,KAAL,CAAWC,gBAAX,CAA4BgB,cAA5B,GAA+C,OAA/C,CAAyDxB,YAAY,CAACiD,SAAb,CAAuBC,KAAhF,CAAwFlD,YAAY,CAACiD,SAAb,CAAuBE,IAFjkB,EAGH,oBAAC,SAAD,EAAW,UAAU,CAAER,UAAU,CAACjC,UAAlC,CAA8C,WAAW,CAAE,KAAKH,KAAL,CAAWa,WAAtE,CAAmF,SAAS,CAAEuB,UAAU,CAACS,YAAX,EAA9F,EAHG,CAAP,CAKD,C,wBA7EqCrD,KAAK,CAACsD,a,SAAzBjD,U","sourcesContent":["import React from 'react';\nimport { Dimensions } from 'react-native';\nimport DrawerLayout from 'react-native-drawer-layout-polyfill';\nimport { SceneView } from 'react-navigation';\n\nimport DrawerSidebar from './DrawerSidebar';\nimport DrawerActions from '../routers/DrawerActions';\n\n/**\n * Component that renders the drawer.\n */\nexport default class DrawerView extends React.PureComponent {\n  state = {\n    drawerWidth: typeof this.props.navigationConfig.drawerWidth === 'function' ? this.props.navigationConfig.drawerWidth() : this.props.navigationConfig.drawerWidth\n  };\n\n  componentDidMount() {\n    Dimensions.addEventListener('change', this._updateWidth);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      openId,\n      closeId,\n      toggleId,\n      isDrawerOpen\n    } = this.props.navigation.state;\n    const {\n      openId: prevOpenId,\n      closeId: prevCloseId,\n      toggleId: prevToggleId\n    } = prevProps.navigation.state;\n\n    if (openId !== prevOpenId) {\n      this._drawer.openDrawer();\n    } else if (closeId !== prevCloseId) {\n      this._drawer.closeDrawer();\n    } else if (toggleId !== prevToggleId) {\n      if (isDrawerOpen) {\n        this._drawer.closeDrawer();\n      } else {\n        this._drawer.openDrawer();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    Dimensions.removeEventListener('change', this._updateWidth);\n  }\n\n  _handleDrawerOpen = () => {\n    this.props.navigation.dispatch({\n      type: DrawerActions.DRAWER_OPENED,\n      key: this.props.navigation.state.key\n    });\n  };\n\n  _handleDrawerClose = () => {\n    this.props.navigation.dispatch({\n      type: DrawerActions.DRAWER_CLOSED,\n      key: this.props.navigation.state.key\n    });\n  };\n\n  _updateWidth = () => {\n    const drawerWidth = typeof this.props.navigationConfig.drawerWidth === 'function' ? this.props.navigationConfig.drawerWidth() : this.props.navigationConfig.drawerWidth;\n\n    if (this.state.drawerWidth !== drawerWidth) {\n      this.setState({ drawerWidth });\n    }\n  };\n\n  _renderNavigationView = () => {\n    return <DrawerSidebar screenProps={this.props.screenProps} navigation={this.props.navigation} descriptors={this.props.descriptors} contentComponent={this.props.navigationConfig.contentComponent} contentOptions={this.props.navigationConfig.contentOptions} drawerPosition={this.props.navigationConfig.drawerPosition} style={this.props.navigationConfig.style} {...this.props.navigationConfig} />;\n  };\n\n  render() {\n    const { state } = this.props.navigation;\n    const activeKey = state.routes[state.index].key;\n    const descriptor = this.props.descriptors[activeKey];\n\n    const { drawerLockMode } = descriptor.options;\n\n    return <DrawerLayout ref={c => {\n      this._drawer = c;\n    }} drawerLockMode={drawerLockMode || this.props.screenProps && this.props.screenProps.drawerLockMode || this.props.navigationConfig.drawerLockMode} drawerBackgroundColor={this.props.navigationConfig.drawerBackgroundColor} drawerWidth={this.state.drawerWidth} onDrawerOpen={this._handleDrawerOpen} onDrawerClose={this._handleDrawerClose} useNativeAnimations={this.props.navigationConfig.useNativeAnimations} renderNavigationView={this._renderNavigationView} drawerPosition={this.props.navigationConfig.drawerPosition === 'right' ? DrawerLayout.positions.Right : DrawerLayout.positions.Left}>\n        <SceneView navigation={descriptor.navigation} screenProps={this.props.screenProps} component={descriptor.getComponent()} />\n      </DrawerLayout>;\n  }\n}"]},"metadata":{},"sourceType":"module"}