{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import getChildEventSubscriber from\"./getChildEventSubscriber\";import getChildRouter from\"./getChildRouter\";import getNavigationActionCreators from\"./routers/getNavigationActionCreators\";import invariant from\"./utils/invariant\";var createParamGetter=function createParamGetter(route){return function(paramName,defaultValue){var params=route.params;if(params&&paramName in params){return params[paramName];}return defaultValue;};};function _getChildNavigation(navigation,childKey,getCurrentParentNavigation){var children=navigation._childrenNavigation||(navigation._childrenNavigation={});var childRoute=navigation.state.routes.find(function(r){return r.key===childKey;});if(!childRoute){return null;}if(children[childKey]&&children[childKey].state===childRoute){return children[childKey];}var childRouter=getChildRouter(navigation.router,childRoute.routeName);var focusedGrandChildRoute=childRoute.routes&&typeof childRoute.index==='number'?childRoute.routes[childRoute.index]:null;var actionCreators=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},navigation.actions),navigation.router.getActionCreators(childRoute,navigation.state.key)),childRouter?childRouter.getActionCreators(focusedGrandChildRoute,childRoute.key):{}),getNavigationActionCreators(childRoute));var actionHelpers={};Object.keys(actionCreators).forEach(function(actionName){actionHelpers[actionName]=function(){var actionCreator=actionCreators[actionName];var action=actionCreator.apply(void 0,arguments);return navigation.dispatch(action);};});if(children[childKey]){children[childKey]=_objectSpread(_objectSpread(_objectSpread({},children[childKey]),actionHelpers),{},{state:childRoute,router:childRouter,actions:actionCreators,getParam:createParamGetter(childRoute)});return children[childKey];}var childSubscriber=getChildEventSubscriber(navigation.addListener,childKey);children[childKey]=_objectSpread(_objectSpread({},actionHelpers),{},{state:childRoute,router:childRouter,actions:actionCreators,getParam:createParamGetter(childRoute),getChildNavigation:function getChildNavigation(grandChildKey){return _getChildNavigation(children[childKey],grandChildKey,function(){var nav=getCurrentParentNavigation();return nav&&nav.getChildNavigation(childKey);});},isFocused:function isFocused(){var currentNavigation=getCurrentParentNavigation();if(!currentNavigation){return false;}var _currentNavigation$st=currentNavigation.state,routes=_currentNavigation$st.routes,index=_currentNavigation$st.index;if(!currentNavigation.isFocused()){return false;}if(routes[index].key===childKey){return true;}return false;},dispatch:navigation.dispatch,getScreenProps:navigation.getScreenProps,dangerouslyGetParent:getCurrentParentNavigation,addListener:childSubscriber.addListener});return children[childKey];}export default _getChildNavigation;","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation/src/getChildNavigation.js"],"names":["getChildEventSubscriber","getChildRouter","getNavigationActionCreators","invariant","createParamGetter","route","paramName","defaultValue","params","getChildNavigation","navigation","childKey","getCurrentParentNavigation","children","_childrenNavigation","childRoute","state","routes","find","r","key","childRouter","router","routeName","focusedGrandChildRoute","index","actionCreators","actions","getActionCreators","actionHelpers","Object","keys","forEach","actionName","actionCreator","action","dispatch","getParam","childSubscriber","addListener","grandChildKey","nav","isFocused","currentNavigation","getScreenProps","dangerouslyGetParent"],"mappings":"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","sourcesContent":["import getChildEventSubscriber from './getChildEventSubscriber';\nimport getChildRouter from './getChildRouter';\nimport getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport invariant from './utils/invariant';\n\nconst createParamGetter = route => (paramName, defaultValue) => {\n  const params = route.params;\n\n  if (params && paramName in params) {\n    return params[paramName];\n  }\n\n  return defaultValue;\n};\n\nfunction getChildNavigation(navigation, childKey, getCurrentParentNavigation) {\n  const children =\n    navigation._childrenNavigation || (navigation._childrenNavigation = {});\n\n  const childRoute = navigation.state.routes.find(r => r.key === childKey);\n\n  if (!childRoute) {\n    return null;\n  }\n\n  if (children[childKey] && children[childKey].state === childRoute) {\n    return children[childKey];\n  }\n\n  const childRouter = getChildRouter(navigation.router, childRoute.routeName);\n\n  // If the route has children, we'll use this to pass in to the action creators\n  // for the childRouter so that any action that depends on the active route will\n  // behave as expected. We don't explicitly require that routers implement routes\n  // and index properties, but if we did then we would put an invariant here to\n  // ensure that a focusedGrandChildRoute exists if childRouter is defined.\n  const focusedGrandChildRoute =\n    childRoute.routes && typeof childRoute.index === 'number'\n      ? childRoute.routes[childRoute.index]\n      : null;\n\n  const actionCreators = {\n    ...navigation.actions,\n    ...navigation.router.getActionCreators(childRoute, navigation.state.key),\n    ...(childRouter\n      ? childRouter.getActionCreators(focusedGrandChildRoute, childRoute.key)\n      : {}),\n    ...getNavigationActionCreators(childRoute),\n  };\n\n  const actionHelpers = {};\n  Object.keys(actionCreators).forEach(actionName => {\n    actionHelpers[actionName] = (...args) => {\n      const actionCreator = actionCreators[actionName];\n      const action = actionCreator(...args);\n      return navigation.dispatch(action);\n    };\n  });\n\n  if (children[childKey]) {\n    children[childKey] = {\n      ...children[childKey],\n      ...actionHelpers,\n      state: childRoute,\n      router: childRouter,\n      actions: actionCreators,\n      getParam: createParamGetter(childRoute),\n    };\n    return children[childKey];\n  }\n\n  const childSubscriber = getChildEventSubscriber(\n    navigation.addListener,\n    childKey\n  );\n\n  children[childKey] = {\n    ...actionHelpers,\n\n    state: childRoute,\n    router: childRouter,\n    actions: actionCreators,\n    getParam: createParamGetter(childRoute),\n\n    getChildNavigation: grandChildKey =>\n      getChildNavigation(children[childKey], grandChildKey, () => {\n        const nav = getCurrentParentNavigation();\n        return nav && nav.getChildNavigation(childKey);\n      }),\n\n    isFocused: () => {\n      const currentNavigation = getCurrentParentNavigation();\n      if (!currentNavigation) {\n        return false;\n      }\n      const { routes, index } = currentNavigation.state;\n      if (!currentNavigation.isFocused()) {\n        return false;\n      }\n      if (routes[index].key === childKey) {\n        return true;\n      }\n      return false;\n    },\n    dispatch: navigation.dispatch,\n    getScreenProps: navigation.getScreenProps,\n    dangerouslyGetParent: getCurrentParentNavigation,\n    addListener: childSubscriber.addListener,\n  };\n  return children[childKey];\n}\n\nexport default getChildNavigation;\n"]},"metadata":{},"sourceType":"module"}