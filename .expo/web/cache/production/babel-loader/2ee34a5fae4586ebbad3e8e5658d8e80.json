{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import propTypes from'prop-types';import hoistStatics from'hoist-non-react-statics';import invariant from\"../utils/invariant\";import withNavigation from\"./withNavigation\";export default function withNavigationFocus(Component){var ComponentWithNavigationFocus=function(_React$Component){_inherits(ComponentWithNavigationFocus,_React$Component);var _super=_createSuper(ComponentWithNavigationFocus);function ComponentWithNavigationFocus(props){var _this;_classCallCheck(this,ComponentWithNavigationFocus);_this=_super.call(this,props);_this.state={isFocused:props.navigation?props.navigation.isFocused():false};return _this;}_createClass(ComponentWithNavigationFocus,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var navigation=this.props.navigation;invariant(!!navigation,'withNavigationFocus can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.');this.subscriptions=[navigation.addListener('didFocus',function(){return _this2.setState({isFocused:true});}),navigation.addListener('willBlur',function(){return _this2.setState({isFocused:false});})];}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.subscriptions.forEach(function(sub){return sub.remove();});}},{key:\"render\",value:function render(){return React.createElement(Component,_extends({},this.props,{isFocused:this.state.isFocused,ref:this.props.onRef}));}}]);return ComponentWithNavigationFocus;}(React.Component);ComponentWithNavigationFocus.displayName=\"withNavigationFocus(\"+(Component.displayName||Component.name)+\")\";return hoistStatics(withNavigation(ComponentWithNavigationFocus),Component);}","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation/src/views/withNavigationFocus.js"],"names":["React","propTypes","hoistStatics","invariant","withNavigation","withNavigationFocus","Component","ComponentWithNavigationFocus","props","state","isFocused","navigation","subscriptions","addListener","setState","forEach","sub","remove","onRef","displayName","name"],"mappings":"qjCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,SAAP,0BACA,MAAOC,CAAAA,cAAP,wBAEA,cAAe,SAASC,CAAAA,mBAAT,CAA6BC,SAA7B,CAAwC,IAC/CC,CAAAA,4BAD+C,2IAKnD,sCAAYC,KAAZ,CAAmB,8DACjB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACXC,SAAS,CAAEF,KAAK,CAACG,UAAN,CAAmBH,KAAK,CAACG,UAAN,CAAiBD,SAAjB,EAAnB,CAAkD,KADlD,CAAb,CAHiB,aAMlB,CAXkD,sGAa/B,oBACVC,CAAAA,UADU,CACK,KAAKH,KADV,CACVG,UADU,CAElBR,SAAS,CACP,CAAC,CAACQ,UADK,CAEP,6JAFO,CAAT,CAKA,KAAKC,aAAL,CAAqB,CACnBD,UAAU,CAACE,WAAX,CAAuB,UAAvB,CAAmC,iBACjC,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEJ,SAAS,CAAE,IAAb,CAAd,CADiC,EAAnC,CADmB,CAInBC,UAAU,CAACE,WAAX,CAAuB,UAAvB,CAAmC,iBACjC,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEJ,SAAS,CAAE,KAAb,CAAd,CADiC,EAAnC,CAJmB,CAArB,CAQD,CA5BkD,mEA8B5B,CACrB,KAAKE,aAAL,CAAmBG,OAAnB,CAA2B,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,MAAJ,EAAJ,EAA9B,EACD,CAhCkD,uCAkC1C,CACP,MACE,qBAAC,SAAD,aACM,KAAKT,KADX,EAEE,SAAS,CAAE,KAAKC,KAAL,CAAWC,SAFxB,CAGE,GAAG,CAAE,KAAKF,KAAL,CAAWU,KAHlB,GADF,CAOD,CA1CkD,0CACVlB,KAAK,CAACM,SADI,EAC/CC,4BAD+C,CAE5CY,WAF4C,yBAEPb,SAAS,CAACa,WAAV,EAC1Cb,SAAS,CAACc,IAHuC,MA6CrD,MAAOlB,CAAAA,YAAY,CAACE,cAAc,CAACG,4BAAD,CAAf,CAA+CD,SAA/C,CAAnB,CACD","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from '../utils/invariant';\nimport withNavigation from './withNavigation';\n\nexport default function withNavigationFocus(Component) {\n  class ComponentWithNavigationFocus extends React.Component {\n    static displayName = `withNavigationFocus(${Component.displayName ||\n      Component.name})`;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        isFocused: props.navigation ? props.navigation.isFocused() : false,\n      };\n    }\n\n    componentDidMount() {\n      const { navigation } = this.props;\n      invariant(\n        !!navigation,\n        'withNavigationFocus can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.'\n      );\n\n      this.subscriptions = [\n        navigation.addListener('didFocus', () =>\n          this.setState({ isFocused: true })\n        ),\n        navigation.addListener('willBlur', () =>\n          this.setState({ isFocused: false })\n        ),\n      ];\n    }\n\n    componentWillUnmount() {\n      this.subscriptions.forEach(sub => sub.remove());\n    }\n\n    render() {\n      return (\n        <Component\n          {...this.props}\n          isFocused={this.state.isFocused}\n          ref={this.props.onRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(withNavigation(ComponentWithNavigationFocus), Component);\n}\n"]},"metadata":{},"sourceType":"module"}