{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";export default(function(Navigator,navigatorConfig){var _class,_temp;return _temp=_class=function(_React$Component){_inherits(KeyboardAwareNavigator,_React$Component);var _super=_createSuper(KeyboardAwareNavigator);function KeyboardAwareNavigator(){var _this;_classCallCheck(this,KeyboardAwareNavigator);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this._previouslyFocusedTextInput=null;_this._handleGestureBegin=function(){_this._previouslyFocusedTextInput=TextInput.State.currentlyFocusedField();if(_this._previouslyFocusedTextInput){TextInput.State.blurTextInput(_this._previouslyFocusedTextInput);}_this.props.onGestureBegin&&_this.props.onGestureBegin();};_this._handleGestureCanceled=function(){if(_this._previouslyFocusedTextInput){TextInput.State.focusTextInput(_this._previouslyFocusedTextInput);}_this.props.onGestureCanceled&&_this.props.onGestureCanceled();};_this._handleGestureFinish=function(){_this._previouslyFocusedTextInput=null;_this.props.onGestureFinish&&_this.props.onGestureFinish();};_this._handleTransitionStart=function(transitionProps,prevTransitionProps){if(transitionProps.index!==prevTransitionProps.index){var currentField=TextInput.State.currentlyFocusedField();if(currentField){TextInput.State.blurTextInput(currentField);}}var onTransitionStart=_this.props.onTransitionStart||navigatorConfig.onTransitionStart;onTransitionStart&&onTransitionStart(transitionProps,prevTransitionProps);};return _this;}_createClass(KeyboardAwareNavigator,[{key:\"render\",value:function render(){return React.createElement(Navigator,_extends({},this.props,{onGestureBegin:this._handleGestureBegin,onGestureCanceled:this._handleGestureCanceled,onGestureFinish:this._handleGestureFinish,onTransitionStart:this._handleTransitionStart}));}}]);return KeyboardAwareNavigator;}(React.Component),_class.router=Navigator.router,_temp;});","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation/src/navigators/createKeyboardAwareNavigator.js"],"names":["React","Navigator","navigatorConfig","_previouslyFocusedTextInput","_handleGestureBegin","TextInput","State","currentlyFocusedField","blurTextInput","props","onGestureBegin","_handleGestureCanceled","focusTextInput","onGestureCanceled","_handleGestureFinish","onGestureFinish","_handleTransitionStart","transitionProps","prevTransitionProps","index","currentField","onTransitionStart","Component","router"],"mappings":"qjCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,+DAGA,eAAe,SAACC,SAAD,CAAYC,eAAZ,gaAGXC,2BAHW,CAGmB,IAHnB,OAiBXC,mBAjBW,CAiBW,UAAM,CAC1B,MAAKD,2BAAL,CAAmCE,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,EAAnC,CACA,GAAI,MAAKJ,2BAAT,CAAsC,CACpCE,SAAS,CAACC,KAAV,CAAgBE,aAAhB,CAA8B,MAAKL,2BAAnC,EACD,CACD,MAAKM,KAAL,CAAWC,cAAX,EAA6B,MAAKD,KAAL,CAAWC,cAAX,EAA7B,CACD,CAvBU,OAyBXC,sBAzBW,CAyBc,UAAM,CAC7B,GAAI,MAAKR,2BAAT,CAAsC,CACpCE,SAAS,CAACC,KAAV,CAAgBM,cAAhB,CAA+B,MAAKT,2BAApC,EACD,CACD,MAAKM,KAAL,CAAWI,iBAAX,EAAgC,MAAKJ,KAAL,CAAWI,iBAAX,EAAhC,CACD,CA9BU,OAgCXC,oBAhCW,CAgCY,UAAM,CAC3B,MAAKX,2BAAL,CAAmC,IAAnC,CACA,MAAKM,KAAL,CAAWM,eAAX,EAA8B,MAAKN,KAAL,CAAWM,eAAX,EAA9B,CACD,CAnCU,OAqCXC,sBArCW,CAqCc,SAACC,eAAD,CAAkBC,mBAAlB,CAA0C,CAIjE,GAAID,eAAe,CAACE,KAAhB,GAA0BD,mBAAmB,CAACC,KAAlD,CAAyD,CACvD,GAAMC,CAAAA,YAAY,CAAGf,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,EAArB,CACA,GAAIa,YAAJ,CAAkB,CAChBf,SAAS,CAACC,KAAV,CAAgBE,aAAhB,CAA8BY,YAA9B,EACD,CACF,CAED,GAAMC,CAAAA,iBAAiB,CACrB,MAAKZ,KAAL,CAAWY,iBAAX,EAAgCnB,eAAe,CAACmB,iBADlD,CAEAA,iBAAiB,EACfA,iBAAiB,CAACJ,eAAD,CAAkBC,mBAAlB,CADnB,CAED,CApDU,yFAKF,CACP,MACE,qBAAC,SAAD,aACM,KAAKT,KADX,EAEE,cAAc,CAAE,KAAKL,mBAFvB,CAGE,iBAAiB,CAAE,KAAKO,sBAH1B,CAIE,eAAe,CAAE,KAAKG,oBAJxB,CAKE,iBAAiB,CAAE,KAAKE,sBAL1B,GADF,CASD,CAfU,oCACwBhB,KAAK,CAACsB,SAD9B,SAEJC,MAFI,CAEKtB,SAAS,CAACsB,MAFf,QAAf","sourcesContent":["import React from 'react';\nimport { TextInput } from 'react-native';\n\nexport default (Navigator, navigatorConfig) =>\n  class KeyboardAwareNavigator extends React.Component {\n    static router = Navigator.router;\n    _previouslyFocusedTextInput = null;\n\n    render() {\n      return (\n        <Navigator\n          {...this.props}\n          onGestureBegin={this._handleGestureBegin}\n          onGestureCanceled={this._handleGestureCanceled}\n          onGestureFinish={this._handleGestureFinish}\n          onTransitionStart={this._handleTransitionStart}\n        />\n      );\n    }\n\n    _handleGestureBegin = () => {\n      this._previouslyFocusedTextInput = TextInput.State.currentlyFocusedField();\n      if (this._previouslyFocusedTextInput) {\n        TextInput.State.blurTextInput(this._previouslyFocusedTextInput);\n      }\n      this.props.onGestureBegin && this.props.onGestureBegin();\n    };\n\n    _handleGestureCanceled = () => {\n      if (this._previouslyFocusedTextInput) {\n        TextInput.State.focusTextInput(this._previouslyFocusedTextInput);\n      }\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n    };\n\n    _handleGestureFinish = () => {\n      this._previouslyFocusedTextInput = null;\n      this.props.onGestureFinish && this.props.onGestureFinish();\n    };\n\n    _handleTransitionStart = (transitionProps, prevTransitionProps) => {\n      // TODO: We should not even have received the transition start event\n      // in the case where the index did not change, I believe. We\n      // should revisit this after 2.0 release.\n      if (transitionProps.index !== prevTransitionProps.index) {\n        const currentField = TextInput.State.currentlyFocusedField();\n        if (currentField) {\n          TextInput.State.blurTextInput(currentField);\n        }\n      }\n\n      const onTransitionStart =\n        this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n      onTransitionStart &&\n        onTransitionStart(transitionProps, prevTransitionProps);\n    };\n  };\n"]},"metadata":{},"sourceType":"module"}