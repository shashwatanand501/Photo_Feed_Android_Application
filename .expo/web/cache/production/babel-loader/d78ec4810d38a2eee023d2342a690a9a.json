{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";var FAR_FAR_AWAY=3000;var ResourceSavingScene=function(_React$Component){_inherits(ResourceSavingScene,_React$Component);var _super=_createSuper(ResourceSavingScene);function ResourceSavingScene(){_classCallCheck(this,ResourceSavingScene);return _super.apply(this,arguments);}_createClass(ResourceSavingScene,[{key:\"render\",value:function render(){var _this$props=this.props,isVisible=_this$props.isVisible,children=_this$props.children,style=_this$props.style,rest=_objectWithoutProperties(_this$props,[\"isVisible\",\"children\",\"style\"]);return React.createElement(View,_extends({style:[styles.container,style],collapsable:false,removeClippedSubviews:Platform.OS==='ios'?!isVisible:true,pointerEvents:isVisible?'auto':'none'},rest),React.createElement(View,{style:isVisible?styles.attached:styles.detached},children));}}]);return ResourceSavingScene;}(React.Component);export{ResourceSavingScene as default};var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},attached:{flex:1},detached:{flex:1,top:FAR_FAR_AWAY}});","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-tabs/dist/views/ResourceSavingScene.js"],"names":["React","FAR_FAR_AWAY","ResourceSavingScene","props","isVisible","children","style","rest","styles","container","Platform","OS","attached","detached","Component","StyleSheet","create","flex","overflow","top"],"mappings":"0oCAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,mLAGA,GAAMC,CAAAA,YAAY,CAAG,IAArB,C,GAEqBC,CAAAA,mB,8SACV,iBACyC,KAAKC,KAD9C,CACCC,SADD,aACCA,SADD,CACYC,QADZ,aACYA,QADZ,CACsBC,KADtB,aACsBA,KADtB,CACgCC,IADhC,wEAGP,MAAO,qBAAC,IAAD,WAAM,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmBH,KAAnB,CAAb,CAAwC,WAAW,CAAE,KAArD,CAA4D,qBAAqB,CAGxFI,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CAAwB,CAACP,SAAzB,CAAqC,IAH9B,CAGoC,aAAa,CAAEA,SAAS,CAAG,MAAH,CAAY,MAHxE,EAGoFG,IAHpF,EAIH,oBAAC,IAAD,EAAM,KAAK,CAAEH,SAAS,CAAGI,MAAM,CAACI,QAAV,CAAqBJ,MAAM,CAACK,QAAlD,EACGR,QADH,CAJG,CAAP,CAQD,C,iCAZ8CL,KAAK,CAACc,S,SAAlCZ,mB,aAerB,GAAMM,CAAAA,MAAM,CAAGO,UAAU,CAACC,MAAX,CAAkB,CAC/BP,SAAS,CAAE,CACTQ,IAAI,CAAE,CADG,CAETC,QAAQ,CAAE,QAFD,CADoB,CAK/BN,QAAQ,CAAE,CACRK,IAAI,CAAE,CADE,CALqB,CAQ/BJ,QAAQ,CAAE,CACRI,IAAI,CAAE,CADE,CAERE,GAAG,CAAElB,YAFG,CARqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nexport default class ResourceSavingScene extends React.Component {\n  render() {\n    const { isVisible, children, style, ...rest } = this.props;\n\n    return <View style={[styles.container, style]} collapsable={false} removeClippedSubviews={\n    // On iOS, set removeClippedSubviews to true only when not focused\n    // This is an workaround for a bug where the clipped view never re-appears\n    Platform.OS === 'ios' ? !isVisible : true} pointerEvents={isVisible ? 'auto' : 'none'} {...rest}>\n        <View style={isVisible ? styles.attached : styles.detached}>\n          {children}\n        </View>\n      </View>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});"]},"metadata":{},"sourceType":"module"}