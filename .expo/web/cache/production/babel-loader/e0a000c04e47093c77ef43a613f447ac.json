{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{TabViewAnimated,TabViewPagerPan}from'react-native-tab-view';import{NavigationActions,ResourceSavingSceneView}from'react-navigation';var TabView=function(_React$PureComponent){_inherits(TabView,_React$PureComponent);var _super=_createSuper(TabView);function TabView(){var _this;_classCallCheck(this,TabView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this._handlePageChanged=function(index){var routeName=_this.props.navigation.state.routes[index].routeName;_this.props.navigation.dispatch(NavigationActions.navigate({routeName:routeName}));};_this._renderScene=function(_ref){var route=_ref.route;var _this$props=_this.props,screenProps=_this$props.screenProps,navigation=_this$props.navigation,descriptors=_this$props.descriptors;var _this$props$navigatio=_this.props.navigationConfig,lazy=_this$props$navigatio.lazy,removeClippedSubviews=_this$props$navigatio.removeClippedSubviews,animationEnabled=_this$props$navigatio.animationEnabled,swipeEnabled=_this$props$navigatio.swipeEnabled;var descriptor=descriptors[route.key];var focusedIndex=navigation.state.index;var focusedKey=navigation.state.routes[focusedIndex].key;var key=route.key;var TabComponent=descriptor.getComponent();return React.createElement(ResourceSavingSceneView,{lazy:lazy,isFocused:focusedKey===key,removeClippedSubViews:removeClippedSubviews,animationEnabled:animationEnabled,swipeEnabled:swipeEnabled,screenProps:screenProps,component:TabComponent,navigation:navigation,childNavigation:descriptor.navigation});};_this._getLabel=function(_ref2){var route=_ref2.route,tintColor=_ref2.tintColor,focused=_ref2.focused;var _this$props2=_this.props,screenProps=_this$props2.screenProps,descriptors=_this$props2.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;if(options.tabBarLabel){return typeof options.tabBarLabel==='function'?options.tabBarLabel({tintColor:tintColor,focused:focused}):options.tabBarLabel;}if(typeof options.title==='string'){return options.title;}return route.routeName;};_this._getOnPress=function(previousScene,_ref3){var route=_ref3.route;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;return options.tabBarOnPress;};_this._getTestIDProps=function(_ref4){var route=_ref4.route;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;return typeof options.tabBarTestIDProps==='function'?options.tabBarTestIDProps({focused:focused}):options.tabBarTestIDProps;};_this._renderIcon=function(_ref5){var focused=_ref5.focused,route=_ref5.route,tintColor=_ref5.tintColor;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;if(options.tabBarIcon){return typeof options.tabBarIcon==='function'?options.tabBarIcon({tintColor:tintColor,focused:focused}):options.tabBarIcon;}return null;};_this._renderTabBar=function(props){var _this$props$navigatio2=_this.props.navigationConfig,tabBarOptions=_this$props$navigatio2.tabBarOptions,TabBarComponent=_this$props$navigatio2.tabBarComponent,animationEnabled=_this$props$navigatio2.animationEnabled,tabBarPosition=_this$props$navigatio2.tabBarPosition;if(typeof TabBarComponent==='undefined'){return null;}return React.createElement(TabBarComponent,_extends({},props,tabBarOptions,{tabBarPosition:tabBarPosition,screenProps:_this.props.screenProps,navigation:_this.props.navigation,getLabel:_this._getLabel,getTestIDProps:_this._getTestIDProps,getOnPress:_this._getOnPress,renderIcon:_this._renderIcon,animationEnabled:animationEnabled}));};_this._renderPager=function(props){return React.createElement(TabViewPagerPan,props);};return _this;}_createClass(TabView,[{key:\"render\",value:function render(){var _this$props$navigatio3=this.props.navigationConfig,tabBarComponent=_this$props$navigatio3.tabBarComponent,tabBarPosition=_this$props$navigatio3.tabBarPosition,animationEnabled=_this$props$navigatio3.animationEnabled,configureTransition=_this$props$navigatio3.configureTransition,initialLayout=_this$props$navigatio3.initialLayout;var renderHeader;var renderFooter;var renderPager;var state=this.props.navigation.state;var route=state.routes[state.index];var descriptors=this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;var tabBarVisible=options.tabBarVisible==null?true:options.tabBarVisible;var swipeEnabled=options.swipeEnabled==null?this.props.navigationConfig.swipeEnabled:options.swipeEnabled;if(typeof swipeEnabled==='function'){swipeEnabled=swipeEnabled(state);}if(tabBarComponent!==undefined&&tabBarVisible){if(tabBarPosition==='bottom'){renderFooter=this._renderTabBar;}else{renderHeader=this._renderTabBar;}}if(animationEnabled===false&&swipeEnabled===false||typeof configureTransition==='function'){renderPager=this._renderPager;}var props={initialLayout:initialLayout,animationEnabled:animationEnabled,configureTransition:configureTransition,swipeEnabled:swipeEnabled,renderPager:renderPager,renderHeader:renderHeader,renderFooter:renderFooter,renderScene:this._renderScene,onIndexChange:this._handlePageChanged,navigationState:this.props.navigation.state,style:styles.container};return React.createElement(TabViewAnimated,props);}}]);return TabView;}(React.PureComponent);TabView.defaultProps={lazy:true,removedClippedSubviews:true,initialLayout:Platform.select({android:{width:1,height:0}})};export default TabView;var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabView.js"],"names":["React","TabViewAnimated","TabViewPagerPan","NavigationActions","ResourceSavingSceneView","TabView","_handlePageChanged","index","routeName","props","navigation","state","routes","dispatch","navigate","_renderScene","route","screenProps","descriptors","navigationConfig","lazy","removeClippedSubviews","animationEnabled","swipeEnabled","descriptor","key","focusedIndex","focusedKey","TabComponent","getComponent","_getLabel","tintColor","focused","options","tabBarLabel","title","_getOnPress","previousScene","tabBarOnPress","_getTestIDProps","tabBarTestIDProps","_renderIcon","tabBarIcon","_renderTabBar","tabBarOptions","TabBarComponent","tabBarComponent","tabBarPosition","_renderPager","configureTransition","initialLayout","renderHeader","renderFooter","renderPager","tabBarVisible","undefined","renderScene","onIndexChange","navigationState","style","styles","container","PureComponent","defaultProps","removedClippedSubviews","Platform","select","android","width","height","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { TabViewAnimated, TabViewPagerPan } from 'react-native-tab-view';\nimport { NavigationActions, ResourceSavingSceneView } from 'react-navigation';\n\nclass TabView extends React.PureComponent {\n  static defaultProps = {\n    lazy: true,\n    removedClippedSubviews: true,\n    // fix for https://github.com/react-native-community/react-native-tab-view/issues/312\n    initialLayout: Platform.select({\n      android: { width: 1, height: 0 },\n    }),\n  };\n\n  _handlePageChanged = index => {\n    let { routeName } = this.props.navigation.state.routes[index];\n    this.props.navigation.dispatch(NavigationActions.navigate({ routeName }));\n  };\n\n  _renderScene = ({ route }) => {\n    const { screenProps, navigation, descriptors } = this.props;\n    const {\n      lazy,\n      removeClippedSubviews,\n      animationEnabled,\n      swipeEnabled,\n    } = this.props.navigationConfig;\n    const descriptor = descriptors[route.key];\n    const focusedIndex = navigation.state.index;\n    const focusedKey = navigation.state.routes[focusedIndex].key;\n    const key = route.key;\n    const TabComponent = descriptor.getComponent();\n    return (\n      <ResourceSavingSceneView\n        lazy={lazy}\n        isFocused={focusedKey === key}\n        removeClippedSubViews={removeClippedSubviews}\n        animationEnabled={animationEnabled}\n        swipeEnabled={swipeEnabled}\n        screenProps={screenProps}\n        component={TabComponent}\n        navigation={navigation}\n        childNavigation={descriptor.navigation}\n      />\n    );\n  };\n\n  _getLabel = ({ route, tintColor, focused }) => {\n    const { screenProps, descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarLabel) {\n      return typeof options.tabBarLabel === 'function'\n        ? options.tabBarLabel({ tintColor, focused })\n        : options.tabBarLabel;\n    }\n\n    if (typeof options.title === 'string') {\n      return options.title;\n    }\n\n    return route.routeName;\n  };\n\n  _getOnPress = (previousScene, { route }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    return options.tabBarOnPress;\n  };\n\n  _getTestIDProps = ({ route }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    return typeof options.tabBarTestIDProps === 'function'\n      ? options.tabBarTestIDProps({ focused })\n      : options.tabBarTestIDProps;\n  };\n\n  _renderIcon = ({ focused, route, tintColor }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarIcon) {\n      return typeof options.tabBarIcon === 'function'\n        ? options.tabBarIcon({ tintColor, focused })\n        : options.tabBarIcon;\n    }\n    return null;\n  };\n\n  _renderTabBar = props => {\n    const {\n      tabBarOptions,\n      tabBarComponent: TabBarComponent,\n      animationEnabled,\n      tabBarPosition,\n    } = this.props.navigationConfig;\n    if (typeof TabBarComponent === 'undefined') {\n      return null;\n    }\n\n    return (\n      <TabBarComponent\n        {...props}\n        {...tabBarOptions}\n        tabBarPosition={tabBarPosition}\n        screenProps={this.props.screenProps}\n        navigation={this.props.navigation}\n        getLabel={this._getLabel}\n        getTestIDProps={this._getTestIDProps}\n        getOnPress={this._getOnPress}\n        renderIcon={this._renderIcon}\n        animationEnabled={animationEnabled}\n      />\n    );\n  };\n\n  _renderPager = props => <TabViewPagerPan {...props} />;\n\n  render() {\n    const {\n      tabBarComponent,\n      tabBarPosition,\n      animationEnabled,\n      configureTransition,\n      initialLayout,\n    } = this.props.navigationConfig;\n\n    let renderHeader;\n    let renderFooter;\n    let renderPager;\n\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    const tabBarVisible =\n      options.tabBarVisible == null ? true : options.tabBarVisible;\n\n    let swipeEnabled =\n      options.swipeEnabled == null\n        ? this.props.navigationConfig.swipeEnabled\n        : options.swipeEnabled;\n\n    if (typeof swipeEnabled === 'function') {\n      swipeEnabled = swipeEnabled(state);\n    }\n\n    if (tabBarComponent !== undefined && tabBarVisible) {\n      if (tabBarPosition === 'bottom') {\n        renderFooter = this._renderTabBar;\n      } else {\n        renderHeader = this._renderTabBar;\n      }\n    }\n\n    if (\n      (animationEnabled === false && swipeEnabled === false) ||\n      typeof configureTransition === 'function'\n    ) {\n      renderPager = this._renderPager;\n    }\n\n    const props = {\n      initialLayout,\n      animationEnabled,\n      configureTransition,\n      swipeEnabled,\n      renderPager,\n      renderHeader,\n      renderFooter,\n      renderScene: this._renderScene,\n      onIndexChange: this._handlePageChanged,\n      navigationState: this.props.navigation.state,\n      style: styles.container,\n    };\n\n    return <TabViewAnimated {...props} />;\n  }\n}\n\nexport default TabView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}