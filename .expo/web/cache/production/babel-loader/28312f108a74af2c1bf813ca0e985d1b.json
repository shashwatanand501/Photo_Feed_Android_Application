{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{TabBar}from'react-native-tab-view';import TabBarIcon from\"./TabBarIcon\";var TabBarTop=function(_React$PureComponent){_inherits(TabBarTop,_React$PureComponent);var _super=_createSuper(TabBarTop);function TabBarTop(){var _this;_classCallCheck(this,TabBarTop);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this._renderLabel=function(scene){var _this$props=_this.props,position=_this$props.position,tabBarPosition=_this$props.tabBarPosition,navigation=_this$props.navigation,activeTintColor=_this$props.activeTintColor,inactiveTintColor=_this$props.inactiveTintColor,showLabel=_this$props.showLabel,upperCaseLabel=_this$props.upperCaseLabel,labelStyle=_this$props.labelStyle,allowFontScaling=_this$props.allowFontScaling;if(showLabel===false){return null;}var index=scene.index;var routes=navigation.state.routes;var inputRange=[-1].concat(_toConsumableArray(routes.map(function(x,i){return i;})));var outputRange=inputRange.map(function(inputIndex){return inputIndex===index?activeTintColor:inactiveTintColor;});var color=position.interpolate({inputRange:inputRange,outputRange:outputRange});var tintColor=scene.focused?activeTintColor:inactiveTintColor;var label=_this.props.getLabel(_objectSpread(_objectSpread({},scene),{},{tintColor:tintColor}));if(typeof label==='string'){return React.createElement(Animated.Text,{style:[styles.label,{color:color},labelStyle],allowFontScaling:allowFontScaling},upperCaseLabel?label.toUpperCase():label);}if(typeof label==='function'){return label(_objectSpread(_objectSpread({},scene),{},{tintColor:tintColor}));}return label;};_this._renderIcon=function(scene){var _this$props2=_this.props,position=_this$props2.position,navigation=_this$props2.navigation,activeTintColor=_this$props2.activeTintColor,inactiveTintColor=_this$props2.inactiveTintColor,renderIcon=_this$props2.renderIcon,showIcon=_this$props2.showIcon,iconStyle=_this$props2.iconStyle;if(showIcon===false){return null;}return React.createElement(TabBarIcon,{position:position,navigation:navigation,activeTintColor:activeTintColor,inactiveTintColor:inactiveTintColor,renderIcon:renderIcon,scene:scene,style:[styles.icon,iconStyle]});};_this._handleOnPress=function(scene){var _this$props3=_this.props,getOnPress=_this$props3.getOnPress,jumpToIndex=_this$props3.jumpToIndex,navigation=_this$props3.navigation;var previousScene=navigation.state.routes[navigation.state.index];var onPress=getOnPress(previousScene,scene);if(onPress){onPress({previousScene:previousScene,scene:scene,jumpToIndex:jumpToIndex,defaultHandler:jumpToIndex});}else{jumpToIndex(scene.index);}};return _this;}_createClass(TabBarTop,[{key:\"render\",value:function render(){var props=this.props;return React.createElement(TabBar,_extends({},props,{onTabPress:this._handleOnPress,jumpToIndex:function jumpToIndex(){},renderIcon:this._renderIcon,renderLabel:this._renderLabel}));}}]);return TabBarTop;}(React.PureComponent);TabBarTop.defaultProps={activeTintColor:'#fff',inactiveTintColor:'#fff',showIcon:false,showLabel:true,upperCaseLabel:true,allowFontScaling:true};export{TabBarTop as default};var styles=StyleSheet.create({icon:{height:24,width:24},label:{textAlign:'center',fontSize:13,margin:8,backgroundColor:'transparent'}});","map":{"version":3,"sources":["E:/photofeed/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarTop.js"],"names":["React","TabBar","TabBarIcon","TabBarTop","_renderLabel","scene","props","position","tabBarPosition","navigation","activeTintColor","inactiveTintColor","showLabel","upperCaseLabel","labelStyle","allowFontScaling","index","routes","state","inputRange","map","x","i","outputRange","inputIndex","color","interpolate","tintColor","focused","label","getLabel","styles","toUpperCase","_renderIcon","renderIcon","showIcon","iconStyle","icon","_handleOnPress","getOnPress","jumpToIndex","previousScene","onPress","defaultHandler","PureComponent","defaultProps","StyleSheet","create","height","width","textAlign","fontSize","margin","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { TabBar } from 'react-native-tab-view';\nimport TabBarIcon from './TabBarIcon';\n\nexport default class TabBarTop extends React.PureComponent {\n  static defaultProps = {\n    activeTintColor: '#fff',\n    inactiveTintColor: '#fff',\n    showIcon: false,\n    showLabel: true,\n    upperCaseLabel: true,\n    allowFontScaling: true,\n  };\n\n  _renderLabel = scene => {\n    const {\n      position,\n      tabBarPosition,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      showLabel,\n      upperCaseLabel,\n      labelStyle,\n      allowFontScaling,\n    } = this.props;\n    if (showLabel === false) {\n      return null;\n    }\n    const { index } = scene;\n    const { routes } = navigation.state;\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const outputRange = inputRange.map(\n      inputIndex => (inputIndex === index ? activeTintColor : inactiveTintColor)\n    );\n    const color = position.interpolate({\n      inputRange,\n      outputRange: outputRange,\n    });\n\n    const tintColor = scene.focused ? activeTintColor : inactiveTintColor;\n    const label = this.props.getLabel({ ...scene, tintColor });\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          style={[styles.label, { color }, labelStyle]}\n          allowFontScaling={allowFontScaling}>\n          {upperCaseLabel ? label.toUpperCase() : label}\n        </Animated.Text>\n      );\n    }\n    if (typeof label === 'function') {\n      return label({ ...scene, tintColor });\n    }\n\n    return label;\n  };\n\n  _renderIcon = scene => {\n    const {\n      position,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      showIcon,\n      iconStyle,\n    } = this.props;\n    if (showIcon === false) {\n      return null;\n    }\n    return (\n      <TabBarIcon\n        position={position}\n        navigation={navigation}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        scene={scene}\n        style={[styles.icon, iconStyle]}\n      />\n    );\n  };\n\n  _handleOnPress = scene => {\n    const { getOnPress, jumpToIndex, navigation } = this.props;\n    const previousScene = navigation.state.routes[navigation.state.index];\n    const onPress = getOnPress(previousScene, scene);\n\n    if (onPress) {\n      // To maintain the same API as `TabbarBottom`, we pass in a `defaultHandler`\n      // even though I don't believe in this case it should be any different\n      // than `jumpToIndex`.\n      onPress({\n        previousScene,\n        scene,\n        jumpToIndex,\n        defaultHandler: jumpToIndex,\n      });\n    } else {\n      jumpToIndex(scene.index);\n    }\n  };\n\n  render() {\n    // TODO: Define full proptypes\n    const props = this.props;\n\n    return (\n      <TabBar\n        {...props}\n        onTabPress={this._handleOnPress}\n        jumpToIndex={() => {}}\n        renderIcon={this._renderIcon}\n        renderLabel={this._renderLabel}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 13,\n    margin: 8,\n    backgroundColor: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}